{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "author": "Microsoft",
        "comments": "Solution template for Power Platform"
    },
    "parameters": {
        "location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
            }
        },
        "workspace-location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
            }
        },
        "workspace": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        },
        "subscription": {
            "defaultValue": "[last(split(subscription().id, '/'))]",
            "type": "String",
            "metadata": {
                "description": "subscription id where Microsoft Sentinel is setup"
            }
        },
        "resourceGroupName": {
            "defaultValue": "[resourceGroup().name]",
            "type": "String",
            "metadata": {
                "description": "resource group name where Microsoft Sentinel is setup"
            }
        }
    },
    "variables": {
        "_solutionName": "Power Platform",
        "_solutionVersion": "3.1.1",
        "solutionId": "sentinel4dynamics365.powerplatform",
        "_solutionId": "[variables('solutionId')]",
        "uiConfigId1": "PowerPlatformInventory",
        "_uiConfigId1": "[variables('uiConfigId1')]",
        "dataConnectorContentId1": "PowerPlatformInventory",
        "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
        "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "_dataConnectorId1": "[variables('dataConnectorId1')]",
        "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
        "dataConnectorVersion1": "1.0.0",
        "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
        "analyticRuleObject1": {
            "analyticRuleVersion1": "3.0.0",
            "_analyticRulecontentId1": "39efbf4b-b347-4cc7-895e-99a868bf29ea",
            "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '39efbf4b-b347-4cc7-895e-99a868bf29ea')]",
            "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('39efbf4b-b347-4cc7-895e-99a868bf29ea')))]",
            "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','39efbf4b-b347-4cc7-895e-99a868bf29ea','-', '3.0.0')))]"
        },
        "analyticRuleObject2": {
            "analyticRuleVersion2": "3.0.0",
            "_analyticRulecontentId2": "57000f0d-ff5d-4166-94b6-aa5fb62b16ec",
            "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '57000f0d-ff5d-4166-94b6-aa5fb62b16ec')]",
            "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('57000f0d-ff5d-4166-94b6-aa5fb62b16ec')))]",
            "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','57000f0d-ff5d-4166-94b6-aa5fb62b16ec','-', '3.0.0')))]"
        },
        "analyticRuleObject3": {
            "analyticRuleVersion3": "3.0.0",
            "_analyticRulecontentId3": "08cb7ffc-59c6-4e7d-88e0-327371c9431b",
            "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '08cb7ffc-59c6-4e7d-88e0-327371c9431b')]",
            "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('08cb7ffc-59c6-4e7d-88e0-327371c9431b')))]",
            "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','08cb7ffc-59c6-4e7d-88e0-327371c9431b','-', '3.0.0')))]"
        },
        "analyticRuleObject4": {
            "analyticRuleVersion4": "3.0.0",
            "_analyticRulecontentId4": "7ec1e61d-f3b7-4f40-bb1a-357a63913c23",
            "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7ec1e61d-f3b7-4f40-bb1a-357a63913c23')]",
            "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7ec1e61d-f3b7-4f40-bb1a-357a63913c23')))]",
            "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7ec1e61d-f3b7-4f40-bb1a-357a63913c23','-', '3.0.0')))]"
        },
        "analyticRuleObject5": {
            "analyticRuleVersion5": "3.0.0",
            "_analyticRulecontentId5": "943acfa0-9285-4eb0-a9c0-42e36177ef19",
            "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '943acfa0-9285-4eb0-a9c0-42e36177ef19')]",
            "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('943acfa0-9285-4eb0-a9c0-42e36177ef19')))]",
            "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','943acfa0-9285-4eb0-a9c0-42e36177ef19','-', '3.0.0')))]"
        },
        "analyticRuleObject6": {
            "analyticRuleVersion6": "3.0.0",
            "_analyticRulecontentId6": "9b4e7b5c-11b4-435c-bfb2-f70ddf21ff9f",
            "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9b4e7b5c-11b4-435c-bfb2-f70ddf21ff9f')]",
            "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9b4e7b5c-11b4-435c-bfb2-f70ddf21ff9f')))]",
            "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9b4e7b5c-11b4-435c-bfb2-f70ddf21ff9f','-', '3.0.0')))]"
        },
        "analyticRuleObject7": {
            "analyticRuleVersion7": "3.1.0",
            "_analyticRulecontentId7": "ed88638d-8627-4c20-ba08-67c13807a9b1",
            "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ed88638d-8627-4c20-ba08-67c13807a9b1')]",
            "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ed88638d-8627-4c20-ba08-67c13807a9b1')))]",
            "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ed88638d-8627-4c20-ba08-67c13807a9b1','-', '3.1.0')))]"
        },
        "analyticRuleObject8": {
            "analyticRuleVersion8": "3.1.0",
            "_analyticRulecontentId8": "4bd7e93a-0646-4e02-8dcb-aa16d16618f4",
            "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4bd7e93a-0646-4e02-8dcb-aa16d16618f4')]",
            "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4bd7e93a-0646-4e02-8dcb-aa16d16618f4')))]",
            "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4bd7e93a-0646-4e02-8dcb-aa16d16618f4','-', '3.1.0')))]"
        },
        "analyticRuleObject9": {
            "analyticRuleVersion9": "3.1.0",
            "_analyticRulecontentId9": "b1e11b8c-545a-4dea-a912-0008e160d183",
            "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b1e11b8c-545a-4dea-a912-0008e160d183')]",
            "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b1e11b8c-545a-4dea-a912-0008e160d183')))]",
            "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b1e11b8c-545a-4dea-a912-0008e160d183','-', '3.1.0')))]"
        },
        "analyticRuleObject10": {
            "analyticRuleVersion10": "3.0.0",
            "_analyticRulecontentId10": "56cb646e-56a0-4f0e-8866-9bc1dd15da78",
            "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '56cb646e-56a0-4f0e-8866-9bc1dd15da78')]",
            "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('56cb646e-56a0-4f0e-8866-9bc1dd15da78')))]",
            "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','56cb646e-56a0-4f0e-8866-9bc1dd15da78','-', '3.0.0')))]"
        },
        "analyticRuleObject11": {
            "analyticRuleVersion11": "3.1.0",
            "_analyticRulecontentId11": "886a5655-3d12-42f1-8927-4095789c575e",
            "analyticRuleId11": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '886a5655-3d12-42f1-8927-4095789c575e')]",
            "analyticRuleTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('886a5655-3d12-42f1-8927-4095789c575e')))]",
            "_analyticRulecontentProductId11": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','886a5655-3d12-42f1-8927-4095789c575e','-', '3.1.0')))]"
        },
        "analyticRuleObject12": {
            "analyticRuleVersion12": "3.0.0",
            "_analyticRulecontentId12": "1b2e6172-85c5-417a-90c3-7cc80cb787f5",
            "analyticRuleId12": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1b2e6172-85c5-417a-90c3-7cc80cb787f5')]",
            "analyticRuleTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1b2e6172-85c5-417a-90c3-7cc80cb787f5')))]",
            "_analyticRulecontentProductId12": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1b2e6172-85c5-417a-90c3-7cc80cb787f5','-', '3.0.0')))]"
        },
        "analyticRuleObject13": {
            "analyticRuleVersion13": "3.0.0",
            "_analyticRulecontentId13": "54d48840-1c64-4399-afee-ad39a069118d",
            "analyticRuleId13": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '54d48840-1c64-4399-afee-ad39a069118d')]",
            "analyticRuleTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('54d48840-1c64-4399-afee-ad39a069118d')))]",
            "_analyticRulecontentProductId13": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','54d48840-1c64-4399-afee-ad39a069118d','-', '3.0.0')))]"
        },
        "huntingQueryObject1": {
            "huntingQueryVersion1": "3.0.0",
            "_huntingQuerycontentId1": "169428be-5ed0-4230-9103-c83df89c789a",
            "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('169428be-5ed0-4230-9103-c83df89c789a')))]"
        },
        "parserObject1": {
            "_parserName1": "[concat(parameters('workspace'),'/','InventoryApps')]",
            "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryApps')]",
            "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InventoryApps-Parser')))]",
            "parserVersion1": "3.1.0",
            "parserContentId1": "InventoryApps-Parser"
        },
        "parserObject2": {
            "_parserName2": "[concat(parameters('workspace'),'/','InventoryAppsConnections')]",
            "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryAppsConnections')]",
            "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InventoryAppsConnections-Parser')))]",
            "parserVersion2": "3.1.0",
            "parserContentId2": "InventoryAppsConnections-Parser"
        },
        "parserObject3": {
            "_parserName3": "[concat(parameters('workspace'),'/','InventoryEnvironments')]",
            "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryEnvironments')]",
            "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InventoryEnvironments-Parser')))]",
            "parserVersion3": "3.1.0",
            "parserContentId3": "InventoryEnvironments-Parser"
        },
        "parserObject4": {
            "_parserName4": "[concat(parameters('workspace'),'/','InventoryFlows')]",
            "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryFlows')]",
            "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('InventoryFlows-Parser')))]",
            "parserVersion4": "3.1.0",
            "parserContentId4": "InventoryFlows-Parser"
        },
        "parserObject5": {
            "_parserName5": "[concat(parameters('workspace'),'/','MSBizAppsTerminatedEmployees')]",
            "_parserId5": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'MSBizAppsTerminatedEmployees')]",
            "parserTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('MSBizAppsTerminatedEmployees-Parser')))]",
            "parserVersion5": "3.0.1",
            "parserContentId5": "MSBizAppsTerminatedEmployees-Parser"
        },
        "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]",
        "dataConnectorVersion10": "1.0.0",
        "dataConnectorVersionConnections10": "1.0.0",
        "_uiConfigId10": "PowerAutomate",
        "_dataConnectorContentId10": "PowerAutomate",
        "dataConnectorTemplateNameConnectorDefinition10": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId10')))]",
        "_dataConnectorContentIdConnections10": "PowerAutomateTemplateConnections",
        "dataConnectorTemplateNameConnections10": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections10')))]",
        "_dataConnectorcontentProductId10": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId10'),'-', variables('dataConnectorVersion10'))))]",
        "dataConnectorDataCollectionRulePrefix10": "PP-Automate",
        "_dataConnectorDataCollectionRulePrefix10": "[variables('dataConnectorDataCollectionRulePrefix10')]",
        "dataConnectorVersion11": "1.0.0",
        "dataConnectorVersionConnections11": "1.0.0",
        "_uiConfigId11": "PowerApps",
        "_dataConnectorContentId11": "PowerApps",
        "dataConnectorTemplateNameConnectorDefinition11": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId11')))]",
        "_dataConnectorContentIdConnections11": "PowerAppsTemplateConnections",
        "dataConnectorTemplateNameConnections11": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections11')))]",
        "_dataConnectorcontentProductId11": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId11'),'-', variables('dataConnectorVersion11'))))]",
        "dataConnectorDataCollectionRulePrefix11": "PP-Apps",
        "_dataConnectorDataCollectionRulePrefix11": "[variables('dataConnectorDataCollectionRulePrefix11')]",
        "dataConnectorVersion12": "1.0.0",
        "dataConnectorVersionConnections12": "1.0.0",
        "_uiConfigId12": "PowerPlatformDLP",
        "_dataConnectorContentId12": "PowerPlatformDLP",
        "dataConnectorTemplateNameConnectorDefinition12": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId12')))]",
        "_dataConnectorContentIdConnections12": "PowerPlatformDlpTemplateConnections",
        "dataConnectorTemplateNameConnections12": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections12')))]",
        "_dataConnectorcontentProductId12": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId12'),'-', variables('dataConnectorVersion12'))))]",
        "dataConnectorDataCollectionRulePrefix12": "PP-DLP",
        "_dataConnectorDataCollectionRulePrefix12": "[variables('dataConnectorDataCollectionRulePrefix12')]",
        "dataConnectorVersion13": "1.0.0",
        "dataConnectorVersionConnections13": "1.0.0",
        "_uiConfigId13": "PowerPlatformConnector",
        "_dataConnectorContentId13": "PowerPlatformConnector",
        "dataConnectorTemplateNameConnectorDefinition13": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId13')))]",
        "_dataConnectorContentIdConnections13": "PowerPlatformConnectorTemplateConnections",
        "dataConnectorTemplateNameConnections13": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections13')))]",
        "_dataConnectorcontentProductId13": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId13'),'-', variables('dataConnectorVersion13'))))]",
        "dataConnectorDataCollectionRulePrefix13": "PP-Connector",
        "_dataConnectorDataCollectionRulePrefix13": "[variables('dataConnectorDataCollectionRulePrefix13')]",
        "dataConnectorVersion14": "1.0.0",
        "dataConnectorVersionConnections14": "1.0.0",
        "_uiConfigId14": "Dataverse",
        "_dataConnectorContentId14": "Dataverse",
        "dataConnectorTemplateNameConnectorDefinition14": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId14')))]",
        "_dataConnectorContentIdConnections14": "DataverseTemplateConnections",
        "dataConnectorTemplateNameConnections14": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections14')))]",
        "_dataConnectorcontentProductId14": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId14'),'-', variables('dataConnectorVersion14'))))]",
        "dataConnectorDataCollectionRulePrefix14": "PP-Dataverse",
        "_dataConnectorDataCollectionRulePrefix14": "[variables('dataConnectorDataCollectionRulePrefix14')]",
        "dataConnectorVersion15": "1.0.0",
        "dataConnectorVersionConnections15": "1.0.0",
        "_uiConfigId15": "PowerPlatformAdmin",
        "_dataConnectorContentId15": "PowerPlatformAdmin",
        "dataConnectorTemplateNameConnectorDefinition15": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId15')))]",
        "_dataConnectorContentIdConnections15": "PowerPlatformAdminTemplateConnections",
        "dataConnectorTemplateNameConnections15": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections15')))]",
        "_dataConnectorcontentProductId15": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId15'),'-', variables('dataConnectorVersion15'))))]",
        "dataConnectorDataCollectionRulePrefix15": "PP-Admin",
        "_dataConnectorDataCollectionRulePrefix15": "[variables('dataConnectorDataCollectionRulePrefix15')]",
        "destinationName": "clv2ws1",
        "_destinationName": "[variables('destinationName')]",
        "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
        "_workspaceResourceId": "[variables('workspaceResourceId')]"
    },
    "resources": [
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('dataConnectorTemplateSpecName1')]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Platform data connector with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion1')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
                            "apiVersion": "2021-03-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "GenericUI",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId1')]",
                                    "title": "Power Platform Inventory (using Azure Functions)",
                                    "publisher": "Microsoft",
                                    "descriptionMarkdown": "The Power Platform Inventory connector is designed to gather data from the Power Platform Self Service Analytics feature. It collects information about Power Platform Environment, Power Apps, Power Apps Connectors, and details of Power Automate flows. This data integration is useful for enriching Power Platform logs, aiding SOC analysts in their investigations by providing a more comprehensive view of the Power Platform activities and usage.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "PowerPlatformEnvironments_CL",
                                            "baseQuery": "PowerPlatformEnvironments_CL"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "PowerApps_CL",
                                            "baseQuery": "PowerApps_CL"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "PowerAppsConnections_CL",
                                            "baseQuery": "PowerAppsConnections_CL"
                                        },
                                        {
                                            "metricName": "Total data received",
                                            "legend": "PowerAutomateFlows_CL",
                                            "baseQuery": "PowerAutomateFlows_CL"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Power Platform Environments",
                                            "query": "InventoryEnvironments\n            | take 10"
                                        },
                                        {
                                            "description": "Power Apps",
                                            "query": "InventoryApps\n            | take 10"
                                        },
                                        {
                                            "description": "Power Apps Connections",
                                            "query": "InventoryAppsConnections\n            | take 10"
                                        },
                                        {
                                            "description": "Power Automate Flows",
                                            "query": "InventoryFlows\n            | take 10"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "InventoryEnvironments",
                                            "lastDataReceivedQuery": "PowerPlatformEnvironments_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "InventoryApps",
                                            "lastDataReceivedQuery": "PowerApps_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "InventoryAppsConnections",
                                            "lastDataReceivedQuery": "PowerAppsConnections_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        },
                                        {
                                            "name": "InventoryFlows",
                                            "lastDataReceivedQuery": "PowerAutomateFlows_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriterias": [
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "PowerPlatformEnvironments_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "PowerApps_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "PowerAppsConnections_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        },
                                        {
                                            "type": "IsConnectedQuery",
                                            "value": [
                                                "PowerAutomateFlows_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                                            ]
                                        }
                                    ],
                                    "availability": {
                                        "status": 1,
                                        "isPreview": false
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Microsoft.Web/Sites, Microsoft.Web/ServerFarms, Microsoft.Insights/Components, Microsoft.Storage/StorageAccounts",
                                                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                                            },
                                            {
                                                "name": "Microsoft.Insights/DataCollectionEndpoints, Microsoft.Insights/DataCollectionRules",
                                                "description": "Read and write permissions to Data Collection Rules/Endpoints is required. Permissions to assign the Monitoring Metrics Publisher role to the Azure Function is required. [See the documentation to learn more about Data Collection Rules](https://docs.microsoft.com/azure/azure-monitor/platform/data-collection-rules)."
                                            },
                                            {
                                                "name": "Azure Data Lake Storage Gen2",
                                                "description": "ADLSv2 storage account configured with Microsoft Power Platform self-service analytics."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "description": ">**NOTE:** This connector uses Azure Functions to connect to an ADLSv2 storage account to pull Power Platform inventory data into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                                        },
                                        {
                                            "description": "**Step 1 - Create a an ADLSv2 Storage Account**\n\n Refer to the [ADLSv2 quickstart guide](https://learn.microsoft.com/azure/storage/blobs/create-data-lake-storage-account) for details. This storage account is to be used by Power Platform Self Service Analytics."
                                        },
                                        {
                                            "description": "**Step 2 - Configure Power Platform Self-Service Analytics**\n\n Refer to the [Power Platform guide](https://learn.microsoft.com/power-platform/admin/self-service-analytics) for details. Configure the data export process to use the storage account created in the previous step. This process can take up to 48 hours to fully activate."
                                        },
                                        {
                                            "description": "**Step 3 - Azure Resource Manager (ARM) Template**\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-ppinventory-azuredeploy)\n2. Populate the deployment template parameters.\n3. Click **Create** to deploy."
                                        },
                                        {
                                            "description": ">**NOTE:** The following steps are only needed if you were missing required permissions for role assignments during ARM template deployment."
                                        },
                                        {
                                            "description": "**Step 4 - Manually configure ADLSv2 role assignment**\n\n1. In [Azure Portal](https://portal.azure.com), navigate to the ADLSv2 storage account.\n2. Open the storage account IAM blade and assign the **Storage Blob Data Reader** role to the Azure Function App managed identity so it can read from the ADLSv2 account. Refer to the [Azure RBAC guide](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal) for more information."
                                        },
                                        {
                                            "description": "**Step 5 - Manually configure DCR role assignment**\n\n1. In Azure Portal, navigate to [Data Collection Rules](https://portal.azure.com/#view/HubsExtension/BrowseResource/resourceType/microsoft.insights%2Fdatacollectionrules) and open Microsoft-Sentinel-PPInventory-DCR.\n2. Open the DCR IAM blade and assign the **Monitoring Metrics Publisher** role to the Azure Function App managed identity so it send data to the Logs Ingestion API. Refer to the [Azure RBAC guide](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal) for more information."
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2023-04-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                                "contentId": "[variables('_dataConnectorContentId1')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion1')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "contentKind": "DataConnector",
                "displayName": "Power Platform Inventory (using Azure Functions)",
                "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
                "id": "[variables('_dataConnectorcontentProductId1')]",
                "version": "[variables('dataConnectorVersion1')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
            "dependsOn": [
                "[variables('_dataConnectorId1')]"
            ],
            "location": "[parameters('workspace-location')]",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
            "apiVersion": "2021-03-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
            "location": "[parameters('workspace-location')]",
            "kind": "GenericUI",
            "properties": {
                "connectorUiConfig": {
                    "title": "Power Platform Inventory (using Azure Functions)",
                    "publisher": "Microsoft",
                    "descriptionMarkdown": "The Power Platform Inventory connector is designed to gather data from the Power Platform Self Service Analytics feature. It collects information about Power Platform Environment, Power Apps, Power Apps Connectors, and details of Power Automate flows. This data integration is useful for enriching Power Platform logs, aiding SOC analysts in their investigations by providing a more comprehensive view of the Power Platform activities and usage.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "PowerPlatformEnvironments_CL",
                            "baseQuery": "PowerPlatformEnvironments_CL"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "PowerApps_CL",
                            "baseQuery": "PowerApps_CL"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "PowerAppsConnections_CL",
                            "baseQuery": "PowerAppsConnections_CL"
                        },
                        {
                            "metricName": "Total data received",
                            "legend": "PowerAutomateFlows_CL",
                            "baseQuery": "PowerAutomateFlows_CL"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "InventoryEnvironments",
                            "lastDataReceivedQuery": "PowerPlatformEnvironments_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "InventoryApps",
                            "lastDataReceivedQuery": "PowerApps_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "InventoryAppsConnections",
                            "lastDataReceivedQuery": "PowerAppsConnections_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        },
                        {
                            "name": "InventoryFlows",
                            "lastDataReceivedQuery": "PowerAutomateFlows_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriterias": [
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "PowerPlatformEnvironments_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "PowerApps_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "PowerAppsConnections_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        },
                        {
                            "type": "IsConnectedQuery",
                            "value": [
                                "PowerAutomateFlows_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                            ]
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Power Platform Environments",
                            "query": "InventoryEnvironments\n            | take 10"
                        },
                        {
                            "description": "Power Apps",
                            "query": "InventoryApps\n            | take 10"
                        },
                        {
                            "description": "Power Apps Connections",
                            "query": "InventoryAppsConnections\n            | take 10"
                        },
                        {
                            "description": "Power Automate Flows",
                            "query": "InventoryFlows\n            | take 10"
                        }
                    ],
                    "availability": {
                        "status": 1,
                        "isPreview": false
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Microsoft.Web/Sites, Microsoft.Web/ServerFarms, Microsoft.Insights/Components, Microsoft.Storage/StorageAccounts",
                                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                            },
                            {
                                "name": "Microsoft.Insights/DataCollectionEndpoints, Microsoft.Insights/DataCollectionRules",
                                "description": "Read and write permissions to Data Collection Rules/Endpoints is required. Permissions to assign the Monitoring Metrics Publisher role to the Azure Function is required. [See the documentation to learn more about Data Collection Rules](https://docs.microsoft.com/azure/azure-monitor/platform/data-collection-rules)."
                            },
                            {
                                "name": "Azure Data Lake Storage Gen2",
                                "description": "ADLSv2 storage account configured with Microsoft Power Platform self-service analytics."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "description": ">**NOTE:** This connector uses Azure Functions to connect to an ADLSv2 storage account to pull Power Platform inventory data into Microsoft Sentinel. This might result in additional data ingestion costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                        },
                        {
                            "description": "**Step 1 - Create a an ADLSv2 Storage Account**\n\n Refer to the [ADLSv2 quickstart guide](https://learn.microsoft.com/azure/storage/blobs/create-data-lake-storage-account) for details. This storage account is to be used by Power Platform Self Service Analytics."
                        },
                        {
                            "description": "**Step 2 - Configure Power Platform Self-Service Analytics**\n\n Refer to the [Power Platform guide](https://learn.microsoft.com/power-platform/admin/self-service-analytics) for details. Configure the data export process to use the storage account created in the previous step. This process can take up to 48 hours to fully activate."
                        },
                        {
                            "description": "**Step 3 - Azure Resource Manager (ARM) Template**\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-ppinventory-azuredeploy)\n2. Populate the deployment template parameters.\n3. Click **Create** to deploy."
                        },
                        {
                            "description": ">**NOTE:** The following steps are only needed if you were missing required permissions for role assignments during ARM template deployment."
                        },
                        {
                            "description": "**Step 4 - Manually configure ADLSv2 role assignment**\n\n1. In [Azure Portal](https://portal.azure.com), navigate to the ADLSv2 storage account.\n2. Open the storage account IAM blade and assign the **Storage Blob Data Reader** role to the Azure Function App managed identity so it can read from the ADLSv2 account. Refer to the [Azure RBAC guide](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal) for more information."
                        },
                        {
                            "description": "**Step 5 - Manually configure DCR role assignment**\n\n1. In Azure Portal, navigate to [Data Collection Rules](https://portal.azure.com/#view/HubsExtension/BrowseResource/resourceType/microsoft.insights%2Fdatacollectionrules) and open Microsoft-Sentinel-PPInventory-DCR.\n2. Open the DCR IAM blade and assign the **Monitoring Metrics Publisher** role to the Azure Function App managed identity so it send data to the Logs Ingestion API. Refer to the [Azure RBAC guide](https://learn.microsoft.com/azure/role-based-access-control/role-assignments-portal) for more information."
                        }
                    ],
                    "id": "[variables('_uiConfigId1')]"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Dataverse - Guest user exfiltration following Power Platform defense impairment_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a chain of events starting with disablement of Power Platform tenant isolation and removal of an environment's access security group. These events are correlated with Dataverse exfiltration alerts associated with the impacted environment and recently created Microsoft Entra guest users.\n\nNote: Activate other Dataverse analytics rules with the MITRE tactic 'Exfiltration' before enabling this rule.",
                                "displayName": "Dataverse - Guest user exfiltration following Power Platform defense impairment",
                                "enabled": false,
                                "query": "let query_lookback = 14d;\nlet query_frequncy = 1h;\nlet defense_evasion_events = PowerPlatformAdminActivity\n    | where ingestion_time() >= ago(query_lookback)\n    | where EventOriginalType == \"TenantIsolationOperation\"\n    | mv-expand PropertyCollection\n    | where PropertyCollection.Name == \"powerplatform.analytics.resource.tenant.isolation_policy.enabled\"\n    | where PropertyCollection.Value == \"False\"\n    | summarize\n        TenantIsolationRemovalTimestamp = max(TimeGenerated)\n        by SecurityDisablingUser = ActorName\n    | join kind=inner (\n        PowerPlatformAdminActivity\n        | where ingestion_time() >= ago(query_lookback)\n        | where EventOriginalType == \"EnvironmentPropertyChange\"\n        | where PropertyCollection has \"Property: SecurityGroupId, Old Value: , New Value: \"\n        | mv-expand PropertyCollection\n        | extend\n            GroupRemovalTimestamp = TimeGenerated,\n            InstanceUrl = tostring(iif(PropertyCollection.Name == \"powerplatform.analytics.resource.environment.url\", PropertyCollection.Value, \"\")),\n            EnvironmentId = tostring(iif(PropertyCollection.Name == \"powerplatform.analytics.resource.environment.name\", PropertyCollection.Value, \"\"))\n        | summarize InstanceUrl = max(InstanceUrl), EnvironmentId = max(EnvironmentId) by GroupRemovalTimestamp, SecurityDisablingUser = ActorName)\n        on SecurityDisablingUser\n    | summarize\n        GroupRemovalTimestamp = max(GroupRemovalTimestamp),\n        TenantIsolationRemovalTimestamp = max(TenantIsolationRemovalTimestamp)\n        by SecurityDisablingUser, InstanceUrl, EnvironmentId;\nlet exfiltration_alerts = SecurityAlert\n    | where ingestion_time() >= ago(query_frequncy)\n    | where Tactics has \"Exfiltration\"\n    | where Entities has ('\"AppId\":32780')\n    | mv-expand todynamic(Entities)\n    | extend AlertUPN = iif(Entities.Type == \"account\", strcat(Entities.Name, \"@\", Entities.UPNSuffix), \"\")\n    | extend InstanceUrl = tostring(iif(Entities.AppId == 32780, Entities.InstanceName, \"\"))\n    | join kind=inner defense_evasion_events on InstanceUrl\n    | where StartTime > TenantIsolationRemovalTimestamp and StartTime > GroupRemovalTimestamp\n    | summarize InstanceUrl = max(InstanceUrl), AlertUPN = max(AlertUPN) by AlertName, SystemAlertId\n    | extend AlertDetails = bag_pack_columns(AlertName, SystemAlertId)\n    | summarize AlertDetails = make_set(AlertDetails, 100) by AlertUPN, InstanceUrl\n    | join kind=inner (\n        AuditLogs\n        | where OperationName == \"Update user\"\n        | where Identity == \"Microsoft Invitation Acceptance Portal\"\n        | mv-expand TargetResources\n        | extend ModifiedProperties = TargetResources.modifiedProperties\n        | mv-expand ModifiedProperties\n        | where ModifiedProperties.displayName == \"AcceptedAs\"\n        | summarize RedeemTime = max(TimeGenerated) by GuestUser = tostring(parse_json(replace_regex(tostring(ModifiedProperties.newValue), \"\\\\r\", \"\"))[0]))\n        on $left.AlertUPN == $right.GuestUser;\ndefense_evasion_events\n| join kind=inner exfiltration_alerts on InstanceUrl\n| lookup InventoryEnvironments on $left.EnvironmentId == $right.EnvironmentId\n| extend\n    AccountName = tostring(split(SecurityDisablingUser, \"@\")[0]),\n    UPNSuffix = tostring(split(SecurityDisablingUser, \"@\")[1]),\n    GuestAccountName = tostring(split(GuestUser, \"@\")[0]),\n    GuestUPNSuffix = tostring(split(GuestUser, \"@\")[0]),\n    DataverseId = 32780\n| project\n    SecurityDisablingUser,\n    GuestUser,\n    AlertDetails,\n    TenantIsolationRemovalTimestamp,\n    GroupRemovalTimestamp,\n    InstanceUrl,\n    EnvironmentId,\n    EnvironmentName,\n    AccountName,\n    UPNSuffix,\n    GuestAccountName,\n    GuestUPNSuffix,\n    DataverseId\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerPlatformAdmin",
                                        "dataTypes": [
                                            "PowerPlatformAdminActivity"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion",
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1629",
                                    "T1567"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "GuestAccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "GuestUPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DataverseId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "InstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{SecurityDisablingUser}} disabled Power Platform tenant isolation and removed the security group used to control access to {{{EnvironmentName}}. Exfiltration alerts associated with guest users were then detected from user {{{GuestUser}}",
                                    "alertDisplayNameFormat": "Dataverse - exfiltration alerts following defense impairment in {{EnvironmentName}} "
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 1",
                                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "contentKind": "AnalyticsRule",
                "displayName": "Dataverse - Guest user exfiltration following Power Platform defense impairment",
                "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
                "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Dataverse - Mass export of records to Excel_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies users exporting a large amount of records from Dynamics 365 to Excel, significantly more records exported than any other recent activity by that user. Large exports from users with no recent activity are identified using a predefined threshold.",
                                "displayName": "Dataverse - Mass export of records to Excel",
                                "enabled": false,
                                "query": "// Set a mass export threshold for users who have no historical activity.\nlet mass_export_threshold = 10000;\nlet query_lookback = 14d;\nlet query_frequency = 1h;\nlet export_activity = DataverseActivity\n    | where Message == \"ExportToExcel\"\n    | extend QueryCount = iif(QueryResults has \",\", todouble(countof(tostring(QueryResults), ',') + 1), double(1));\nlet current_activity = export_activity\n    | where ingestion_time() > ago(query_frequency)\n    | extend RecordId = split(QueryResults, \",\")\n    | summarize\n        FirstEvent = min(TimeGenerated),\n        CurrentExportRate = sum(QueryCount),\n        SampleRecordIds = make_set(RecordId, 1000)\n        by UserId, InstanceUrl;\nlet historical_activity = export_activity\n    | where ingestion_time() between(ago(query_lookback) .. ago(query_frequency))\n    | summarize HistoricalBaseline = sum(QueryCount) by HistoricalUserId = UserId, InstanceUrl;\ncurrent_activity\n| join kind=leftouter(historical_activity) on $left.UserId == $right.HistoricalUserId, InstanceUrl\n| extend BaselineThreshold = iif(isnotnull(HistoricalBaseline), HistoricalBaseline, todouble(mass_export_threshold))\n| where CurrentExportRate > BaselineThreshold\n| join kind=inner(export_activity\n    | where ingestion_time() > ago(query_frequency)\n    | summarize EntityCount = sum(QueryCount) by UserId, ClientIp, InstanceUrl, EntityName\n    | extend Details = bag_pack_columns(EntityName, EntityCount)\n    | summarize Details = make_set(Details, 100) by UserId, ClientIp, InstanceUrl)\n    on UserId, InstanceUrl\n| lookup (InventoryEnvironments()) on $left.InstanceUrl == $right.CdsInstanceUrl\n| extend\n    CloudAppId = int(32780),\n    AccountName = tostring(split(UserId, '@')[0]),\n    UPNSuffix = tostring(split(UserId, '@')[1])\n| project\n    FirstEvent,\n    UserId,\n    ClientIp,\n    BaselineThreshold,\n    CurrentExportRate,\n    Details,\n    SampleRecordIds,\n    InstanceUrl,\n    AccountName,\n    UPNSuffix,\n    CloudAppId,\n    EnvironmentId,\n    EnvironmentName\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "Dataverse",
                                        "dataTypes": [
                                            "DataverseActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1567"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "CloudAppId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "InstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "ClientIp",
                                                "identifier": "Address"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "User {{UserId}} exported {{{CurrentExportRate}} records using the ExportToExcel function in Dataverse.",
                                    "alertDisplayNameFormat": "Dataverse - mass export to Excel activity in {{{InstanceUrl}} "
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 2",
                                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "contentKind": "AnalyticsRule",
                "displayName": "Dataverse - Mass export of records to Excel",
                "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
                "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Dataverse - User bulk retrieval outside normal activity_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies users retrieving significantly more records from Dataverse than they have previously in the past 2 weeks.",
                                "displayName": "Dataverse - User bulk retrieval outside normal activity",
                                "enabled": false,
                                "query": "let baseline_time = 14d;\nlet detection_time = 1d;\nDataverseActivity\n| where ingestion_time() between(ago(baseline_time) .. ago(detection_time - 1d))\n| where Message == \"RetrieveMultiple\"\n| extend numQueryCount = todouble(QueryResults)\n| extend QueryCount = iif(QueryResults contains \",\", todouble(countof(tostring(QueryResults), ',') + 1), numQueryCount)\n| extend QueryCount = iif(isnotempty(QueryCount), QueryCount, double(1))\n| summarize sum(QueryCount) by UserId\n| extend HistoricalBaseline = sum_QueryCount\n| join kind=inner (\n    DataverseActivity\n    | where ingestion_time() > ago(detection_time)\n    | where Message == \"RetrieveMultiple\"\n    | extend numQueryCount = todouble(QueryResults)\n    | extend QueryCount = iif(QueryResults contains \",\", todouble(countof(tostring(QueryResults), ',') + 1), numQueryCount)\n    | extend QueryCount = iif(isnotempty(QueryCount), QueryCount, double(1))\n    | summarize sum(QueryCount) by UserId\n    | extend CurrentExportRate = sum_QueryCount)\n    on UserId\n| where CurrentExportRate > HistoricalBaseline\n| project UserId, HistoricalBaseline, CurrentExportRate\n| join kind=inner(\n    DataverseActivity\n    | where ingestion_time() > ago(detection_time)\n    | where Message == \"RetrieveMultiple\"\n    | extend numQueryCount = todouble(QueryResults)\n    | extend QueryCount = iif(QueryResults contains \",\", todouble(countof(tostring(QueryResults), ',') + 1), numQueryCount)\n    | extend QueryCount = iif(isnotempty(QueryCount), QueryCount, double(1)))\n    on UserId\n| summarize\n    QuerySizes = make_set(QueryCount),\n    MostRecentQuery = max(TimeGenerated),\n    IPs = make_set(ClientIp),\n    UserAgents = make_set(UserAgent),\n    Entities = make_set(EntityName),\n    Queries = make_set(Query)\n    by UserId, InstanceUrl, HistoricalBaseline, CurrentExportRate\n| lookup (InventoryEnvironments()) on $left.InstanceUrl == $right.CdsInstanceUrl\n| extend\n    AccountName = tostring(split(UserId, '@')[0]),\n    UPNSuffix = tostring(split(UserId, '@')[1]),\n    CloudAppId = int(32780)\n| project\n    MostRecentQuery,\n    UserId,\n    IPs,\n    UserAgents,\n    InstanceUrl,\n    Queries,\n    QuerySizes,\n    Entities,\n    HistoricalBaseline,\n    CurrentExportRate,\n    AccountName,\n    UPNSuffix,\n    CloudAppId,\n    EnvironmentId,\n    EnvironmentName\n",
                                "queryFrequency": "P1D",
                                "queryPeriod": "P14D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "Dataverse",
                                        "dataTypes": [
                                            "DataverseActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T1048"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "CloudAppId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "InstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{UserId}} exported {{CurrentExportRate}} records, far beyond the historical baseline of {{{HistoricalBaseline}}.",
                                    "alertDisplayNameFormat": "Dataverse - Bulk record retrieval outside of normal activity"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 3",
                                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "contentKind": "AnalyticsRule",
                "displayName": "Dataverse - User bulk retrieval outside normal activity",
                "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
                "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Apps - App activity from unauthorized geo_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies Power Apps activity from countries in a predefined list of unauthorized countries.",
                                "displayName": "Power Apps - App activity from unauthorized geo",
                                "enabled": false,
                                "query": "let unauthorized_country_codes = dynamic([\n    // Specify the disallowed two letter country codes\n    // example: disallowed_country_codes = dynamic([\"RU\", \"KP\", \"IR\"])\n    ]);\nlet query_frequency = 1h;\nlet query_lookback = 14d;\nPowerAppsActivity\n| where ingestion_time() >= ago(query_frequency)\n| extend\n    EnvironmentId = tostring(AdditionalInfo.environmentName)\n| summarize FirstEvent = min(TimeGenerated) by ActorName, SrcIpAddr, TargetAppName, EnvironmentId\n| join kind=inner (\n    SigninLogs\n    | where TimeGenerated >=ago(query_lookback)\n    | summarize by IPAddress, Location\n    | where isnotempty(Location))\n    on $left.SrcIpAddr == $right.IPAddress\n| where Location in (unauthorized_country_codes)\n| lookup InventoryApps on $left.TargetAppName == $right.ResourceId\n| lookup InventoryEnvironments on EnvironmentId\n| extend\n    PowerAppsAppName = iif(isempty(Name), \"*Unresolved*\", Name),\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    PowerAppsAppId = TargetAppName,\n    PowerAppsEntityId = 27593,\n    DataverseId = 32780,\n    AccountName = tostring(split(ActorName, '@')[0]),\n    UPNSuffix = tostring(split(ActorName, '@')[1])\n| project\n    FirstEvent,\n    ActorName,\n    SrcIpAddr,\n    Location,\n    PowerAppsAppName,\n    PowerAppsAppId,\n    EnvironmentId,\n    EnvironmentName,\n    PowerAppsEntityId,\n    DataverseId,\n    CdsInstanceUrl,\n    AccountName,\n    UPNSuffix\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryApps",
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerApps",
                                        "dataTypes": [
                                            "PowerAppsActivity"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1078"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "SrcIpAddr",
                                                "identifier": "Address"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAppsEntityId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "PowerAppsAppId",
                                                "identifier": "Name"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DataverseId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "CdsInstanceUrl",
                                                "identifier": "Name"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName",
                                    "PowerAppsAppId": "PowerAppsAppId",
                                    "PowerAppsAppName": "PowerAppsAppName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "User {{ActorName}} activity associated with {{PowerAppsAppName}}  from an unauthorized geolocation: {{Location}}",
                                    "alertDisplayNameFormat": "Power Apps activity from an unauthorized location"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 4",
                                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Apps - App activity from unauthorized geo",
                "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
                "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Apps - Bulk sharing of Power Apps to newly created guest users_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies unusual bulk sharing, based on a predefined threshold in the query, of Power Apps to newly created Microsoft Entra guest users.",
                                "displayName": "Power Apps - Bulk sharing of Power Apps to newly created guest users",
                                "enabled": false,
                                "query": "////////////\n// threshold = If the number of unique accounts that a power app is shared with is greater than\n// threshold than it'll trigger an alert. A threshold of 5 is good to start with.\n// However, if this is giving too many false positives, please adjust the threshold.\n////////////\nlet threshold = 5;\n////////////\n// Please replace the allowed_domains with a list of domains of your partners/sibling orgs\n// with whom you generally share power apps with. This will allow us to filter\n// legitimate bulk sharing attempts. Avoid using domains such as gmail, outlook, etc.\n///////////\nlet allowed_domains = pack_array(\"contoso.com\");\nlet query_frequency = 1h;\nlet query_lookback = 14d;\nPowerAppsActivity\n| where ingestion_time() >= ago(query_frequency)\n| where EventOriginalType == \"PowerAppPermissionEdited\"\n| extend\n    TargetObjectId = tostring(AdditionalInfo.targetObjectId),\n    EnvironmentId = tostring(AdditionalInfo.environmentName)\n| join kind=leftouter (\n    AuditLogs\n    | where ActivityDateTime >= ago(query_lookback)\n    | where SourceSystem =~ \"Azure AD\" and OperationName == \"Invite external user\"\n    | where Result =~ \"success\"\n    | extend InvitedOrgEmail = tostring(parse_json(AdditionalDetails[5])['value'])\n    | extend InvitedOrgDomain = tostring(split(InvitedOrgEmail, \"@\")[1])\n    | where not(InvitedOrgDomain has_any(allowed_domains))\n    | extend\n        InvitedById = tostring(parse_json(InitiatedBy)['user']['id']),\n        InvitedByUPN = tostring(parse_json(InitiatedBy)['user']['userPrincipalName']),\n        InvitedEmail = tostring(parse_json(TargetResources[0])['userPrincipalName']),\n        InvitedId = tostring(parse_json(TargetResources[0])['id'])\n    | summarize by InvitedById, InvitedByUPN, InvitedEmail, InvitedId, InvitedOrgDomain)\n    on $left.TargetObjectId == $right.InvitedId\n| where isnotempty(InvitedId)\n| summarize\n    StartTime = min(TimeGenerated),\n    EndTime = max(TimeGenerated),\n    TargetedUsersCount=dcount(TargetObjectId),\n    TargetedObjectIds = make_set(TargetObjectId, 1000),\n    InvitedDomains = make_set(InvitedOrgDomain, 1000),\n    InvitedEmailAddresses = make_set(InvitedEmail, 1000)\n    by TargetAppName, InvitedById, InvitedByUPN, EnvironmentId\n| lookup InventoryApps on $left.TargetAppName == $right.ResourceId\n| lookup InventoryEnvironments on EnvironmentId\n| extend\n    PowerAppsAppName = iif(isempty(Name), \"*Unresolved*\", Name),\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    PowerAppsEntityId = 27593,\n    AccountName = tostring(split(InvitedByUPN, '@')[0]),\n    UPNSuffix = tostring(split(InvitedByUPN, '@')[1])\n| project\n    StartTime,\n    EndTime,\n    InvitedByUPN,\n    InvitedById,\n    InvitedDomains,\n    InvitedEmailAddresses,\n    TargetedUsersCount,\n    TargetedObjectIds,\n    PowerAppsAppName,\n    TargetAppName,\n    EnvironmentName,\n    EnvironmentId,\n    PowerAppsEntityId,\n    AccountName,\n    UPNSuffix\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryApps",
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerApps",
                                        "dataTypes": [
                                            "PowerAppsActivity"
                                        ]
                                    },
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "AuditLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "ResourceDevelopment",
                                    "InitialAccess",
                                    "LateralMovement"
                                ],
                                "techniques": [
                                    "T1587",
                                    "T1566",
                                    "T1534"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAppsEntityId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "TargetAppName",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName",
                                    "PowerAppsAppId": "TargetAppName",
                                    "PowerAppsAppName": "PowerAppsAppName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{InvitedByUPN}}  shared an app with {{TargetedUsersCount}} recently added guest user accounts that are not on the list of allowed partner domains. List of domain s {{InvitedDomains}}",
                                    "alertDisplayNameFormat": "Power Apps - app shared with recently created external guest accounts"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 5",
                                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Apps - Bulk sharing of Power Apps to newly created guest users",
                "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
                "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Apps - Data destruction following publishing of a new app_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a chain of a events where a new app is created or published, that is followed by mass update or delete events in Dataverse, within 1 hour. The incident severity is raised if the app publisher is on the list of users in the TerminatedEmployees watchlist.",
                                "displayName": "Power Apps - Data destruction following publishing of a new app",
                                "enabled": false,
                                "query": "let delete_threshold = 250;\nlet update_threshold = 500;\nlet query_frequency = 1h;\nlet power_apps_activity = PowerAppsActivity\n    | where EventOriginalType in (\"CreatePowerApp\", \"PublishPowerApp\")\n    | project-rename CreateOrPublishTime = TimeGenerated, AppMaker = ActorName\n    | summarize arg_min(CreateOrPublishTime, *) by TargetAppName\n    | join kind=inner (\n        PowerAppsActivity\n        | where EventOriginalType == \"LaunchPowerApp\"\n        | summarize FirstAppLaunchTime = min(TimeGenerated) by AppUser = ActorName, TargetAppName\n        )\n        on TargetAppName\n    | where FirstAppLaunchTime > CreateOrPublishTime\n    | extend\n        EnvironmentId = tostring(AdditionalInfo.environmentName),\n        PowerAppsAppId = TargetAppName\n    | join kind=inner (InventoryEnvironments()) on EnvironmentId;\nlet dataverse_delete_or_update_activity = DataverseActivity\n    | where ingestion_time() >= ago (query_frequency)\n    | where Message in (\"Update\", \"Delete\");\npower_apps_activity\n| join kind=inner(dataverse_delete_or_update_activity)\n    on\n    $left.CdsInstanceUrl == $right.InstanceUrl,\n    $left.AppUser == $right.UserId,\n    $left.SrcIpAddr == $right.ClientIp\n| where TimeGenerated between (FirstAppLaunchTime .. (FirstAppLaunchTime + 1h))\n| summarize\n    Fields = make_set(EntityName, 100),\n    TotalRecords = count()\n    by\n    AppMaker,\n    CreateOrPublishTime,\n    Message,\n    UserId,\n    ClientIp,\n    InstanceUrl,\n    TargetAppName,\n    EnvironmentId,\n    EnvironmentName\n| where (\n    Message == \"Delete\" and TotalRecords >= delete_threshold\n    ) or (\n    Message == \"Update\" and TotalRecords >= update_threshold\n    )\n| lookup (\n    MSBizAppsTerminatedEmployees()\n    | extend Severity = \"High\")\n    on $left.AppMaker == $right.UserPrincipalName\n| lookup InventoryApps on $left.TargetAppName == $right.ResourceId\n| extend\n    PowerAppsAppName = iif(isempty(Name), \"*Unresolved*\", Name),\n    AccountName = tostring(split(UserId, \"@\")[0]),\n    UPNSuffix = tostring(split(UserId, \"@\")[1]),\n    AppUser = UserId,\n    AppUserIpAddr = ClientIp,\n    PowerAppsAppId = TargetAppName,\n    PowerAppsEntityId = 27593,\n    DataverseId = 32780\n| project\n    CreateOrPublishTime,\n    AppMaker,\n    AppName = Name,\n    PowerAppsAppId,\n    PowerAppsAppName,\n    AppUser,\n    AppUserIpAddr,\n    Fields,\n    Message,\n    TotalRecords,\n    EnvironmentId,\n    EnvironmentName,\n    InstanceUrl,\n    Severity,\n    PowerAppsEntityId,\n    DataverseId,\n    AccountName,\n    UPNSuffix\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryApps",
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerApps",
                                        "dataTypes": [
                                            "PowerAppsActivity"
                                        ]
                                    },
                                    {
                                        "connectorId": "Dataverse",
                                        "dataTypes": [
                                            "DataverseActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1485"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AppMaker",
                                                "identifier": "FullName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAppsEntityId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "PowerAppsAppId",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DataverseId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "InstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AppUserIpAddr",
                                                "identifier": "Address"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName",
                                    "PowerAppsAppId": "PowerAppsAppId",
                                    "PowerAppsAppName": "PowerAppsAppName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "Data destruction events in {{InstanceUrl}} following creation or update of {{AppName}} by {{AppUser}} (this user is on the terminated employee list.",
                                    "alertDisplayNameFormat": "Suspicious Power Apps activity by terminated or notified employee",
                                    "alertSeverityColumnName": "Severity"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 6",
                                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Apps - Data destruction following publishing of a new app",
                "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
                "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Apps - Multiple apps deleted_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies mass delete activity where multiple Power Apps are deleted, matching a predefined threshold of total apps deleted or app delete events across multiple Power Platform environments.",
                                "displayName": "Power Apps - Multiple apps deleted",
                                "enabled": false,
                                "query": "let total_app_mass_delete_threshold = 25;\nlet cross_environment_delete_threshold = 10;\nlet query_frequency = 1h;\nlet app_delete_events = PowerAppsActivity\n    | where ingestion_time() >= ago (query_frequency)\n    | where EventOriginalType == \"DeletePowerApp\"\n    | project\n        EnvironmentId = tostring(AdditionalInfo.environmentName),\n        ActorName;\napp_delete_events\n| summarize AppCount = count(), EnvCount = dcount(EnvironmentId) by ActorName\n| where AppCount >= total_app_mass_delete_threshold or EnvCount >= cross_environment_delete_threshold\n| join kind=inner (\n    PowerAppsActivity\n    | where EventOriginalType == \"DeletePowerApp\"\n    | extend\n        DeleteTime = TimeGenerated,\n        EnvironmentId = tostring(AdditionalInfo.environmentName)\n    )\n    on ActorName\n| lookup InventoryApps on $left.TargetAppName == $right.ResourceId\n| lookup InventoryEnvironments on EnvironmentId\n| extend PowerAppsAppId = TargetAppName\n| extend\n    PowerAppsName = iif(isempty(Name), \"*Unresolved*\", Name),\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    PowerAppsEntityId = 27593,\n    DataverseId = 32780,\n    AccountName = tostring(split(ActorName, '@')[0]),\n    UPNSuffix = tostring(split(ActorName, '@')[1])\n| project\n    DeleteTime,\n    ActorName,\n    PowerAppsName,\n    PowerAppsAppId,\n    AppCount,\n    EnvCount,\n    PowerAppsEntityId,\n    DataverseId,\n    EnvironmentId,\n    EnvironmentName,\n    CdsInstanceUrl,\n    AccountName,\n    UPNSuffix\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryApps",
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerApps",
                                        "dataTypes": [
                                            "PowerAppsActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1485",
                                    "T0826"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAppsEntityId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "PowerAppsAppId",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DataverseId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "CdsInstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName",
                                    "PowerAppsAppId": "PowerAppsAppId",
                                    "PowerAppsName": "PowerAppsName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{AppCount}} apps were deleted in {{EnvCount}} environments by {{ActorName}} , exceeding the mass delete threshold.",
                                    "alertDisplayNameFormat": "Power Apps - mass deletion of apps"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 7",
                                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Apps - Multiple apps deleted",
                "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
                "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Apps - Multiple users access a malicious link after launching new app_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies a chain of events, where a new Power App is created, followed by mulitple users launching the app within the detection window and clicking on the same malicious URL.",
                                "displayName": "Power Apps - Multiple users access a malicious link after launching new app",
                                "enabled": false,
                                "query": "// Define a threshold (distinct_user_launch_threshold) for\n// the minimum number of users who launched an app\n// to be in scope of this detection\nlet distinct_user_launch_threshold = 2;\n// Define a threshold for the minumum number of users\n// who clicked the same malicious link after launching the app\n// to be in scope of this detection\nlet distinct_user_url_click_threshold = 2;\nlet query_frequency = 1h;\nlet new_app_creation_activity = PowerAppsActivity\n    | where EventOriginalType == \"CreatePowerApp\"\n    | extend EnvironmentId = tostring(AdditionalInfo.environmentName)\n    | project-rename\n        AppCreatedTime = TimeGenerated,\n        AppCreator = ActorName,\n        AppCreatorIpAddr = SrcIpAddr;\nlet new_app_launch_activity = new_app_creation_activity\n    | join kind=inner (\n        PowerAppsActivity\n        | where EventOriginalType == \"LaunchPowerApp\"\n        | summarize FirstAppLaunchTime = min(TimeGenerated) by ActorName, TargetAppName)\n        on TargetAppName\n    | where FirstAppLaunchTime > AppCreatedTime;\nlet distinct_user_launch_count = toscalar(\n    new_app_launch_activity\n    | summarize DistinctUserCount = dcount(ActorName)\n    );\nlet new_app_launch_users = new_app_launch_activity\n    | where distinct_user_launch_count > distinct_user_launch_threshold\n    | join kind=inner (\n        new_app_launch_activity\n        | summarize by ActorName\n        )\n        on $left.ActorName == $right.ActorName\n    | summarize\n        by\n        ActorName,\n        FirstAppLaunchTime,\n        TargetAppName,\n        EnvironmentId,\n        AppCreator,\n        AppCreatorIpAddr;\nlet detected_urls = union isfuzzy=true\n        (\n        SecurityAlert\n        | where Entities has_cs '\"Type\":\"url\"'\n        | mv-expand todynamic(Entities)\n        | where tostring(Entities.Type) == \"url\"\n        | project Url = tostring(Entities.Url), Source = \"SecurityAlert\"\n        ),\n        (\n        ThreatIntelligenceIndicator\n        | where ExpirationDateTime > now()\n        | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n        | where Active == true and isnotempty(Url)\n        | project Url, Source = \"ThreatIntelligence\"\n        )\n    | summarize by Url, Source;\nlet url_click_events = union isfuzzy=true\n        (\n        UrlClickEvents\n        | where TimeGenerated >= ago(query_frequency)\n        | where isnotempty(ThreatTypes)\n        | join kind=inner (new_app_launch_users) on $left.AccountUpn == $right.ActorName\n        | where TimeGenerated between (FirstAppLaunchTime .. (FirstAppLaunchTime + 1h))\n        | summarize by ActorName, Url, Source = \"MicrosoftDefender\"\n        ),\n        (\n        _Im_WebSession\n        | where TimeGenerated >= ago(query_frequency)\n        | join kind=inner (new_app_launch_users) on $left.SrcUsername == $right.ActorName\n        | join kind=inner (detected_urls) on Url\n        | where TimeGenerated between (FirstAppLaunchTime .. (FirstAppLaunchTime + 1h))\n        | summarize by ActorName, Url, Source\n        );\nlet distinct_url_click_events_count = toscalar(\n    url_click_events\n    | summarize DistinctUserCount = dcount(ActorName) by Url\n    | where DistinctUserCount > distinct_user_url_click_threshold\n    | summarize sum(DistinctUserCount)\n    );\nurl_click_events\n| where distinct_url_click_events_count >= distinct_user_url_click_threshold\n| join kind=inner (new_app_launch_users) on ActorName\n| project-rename PowerAppsAppId = TargetAppName\n| lookup (InventoryApps()) on $left.PowerAppsAppId == $right.ResourceId\n| lookup (InventoryEnvironments()) on EnvironmentId\n| extend\n    PowerAppsAppName = iif(isempty(Name), \"*Unresolved*\", Name),\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    PowerAppsEntityId = 27593,\n    DataverseId = 32780,\n    AccountName = tostring(split(ActorName, '@')[0]),\n    UPNSuffix = tostring(split(ActorName, '@')[1])\n| project\n    FirstAppLaunchTime,\n    AppCreator,\n    PowerAppsAppName,\n    PowerAppsAppId,\n    ImpactedUser = ActorName,\n    AccountName,\n    UPNSuffix,\n    EnvironmentName,\n    EnvironmentId,\n    Url,\n    Source,\n    PowerAppsEntityId,\n    DataverseId\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryApps",
                                            "InventoryEnvironments"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerApps",
                                        "dataTypes": [
                                            "PowerAppsActivity"
                                        ]
                                    },
                                    {
                                        "connectorId": "MicrosoftThreatProtection",
                                        "dataTypes": [
                                            "UrlClickEvents"
                                        ]
                                    },
                                    {
                                        "connectorId": "ThreatIntelligence",
                                        "dataTypes": [
                                            "ThreatIntelligenceIndicator"
                                        ]
                                    },
                                    {
                                        "connectorId": "ThreatIntelligenceTaxii",
                                        "dataTypes": [
                                            "ThreatIntelligenceIndicator"
                                        ]
                                    },
                                    {
                                        "connectorId": "MicrosoftDefenderThreatIntelligence",
                                        "dataTypes": [
                                            "ThreatIntelligenceIndicator"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess"
                                ],
                                "techniques": [
                                    "T1189",
                                    "T1566"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAppsEntityId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "PowerAppsAppId",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DataverseId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "EnvironmentName",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "URL",
                                        "fieldMappings": [
                                            {
                                                "columnName": "Url",
                                                "identifier": "Url"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AppCreator",
                                                "identifier": "FullName"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            },
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "AlertPerResult"
                                },
                                "customDetails": {
                                    "AppCreator": "AppCreator",
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName",
                                    "PowerAppsAppId": "PowerAppsAppId",
                                    "PowerAppsAppName": "PowerAppsAppName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "Multiple users opened a malicious link after launching app {{PowerAppsAppName}}  in {{EnvironmentName}}.  Click here to navigate to the Power Apps Portal to examine the app: https://make.powerapps.com/environments/{{EnvironmentId}}/apps",
                                    "alertDisplayNameFormat": "Possible malicious app detected in {{EnvironmentName}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 8",
                                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Apps - Multiple users access a malicious link after launching new app",
                "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
                "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Automate - Departing employee flow activity_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies instances where an employee who has been notified or is already terminated, on the TerminatedEmployees watchlist, creates or modifies a Power Automate flow.",
                                "displayName": "Power Automate - Departing employee flow activity",
                                "enabled": false,
                                "query": "let query_frequency = 1h;\nPowerAutomateActivity\n| where ingestion_time() >= ago(query_frequency)\n| where EventOriginalType in (\"CreateFlow\", \"EditFlow\")\n| join kind=inner (MSBizAppsTerminatedEmployees()) on $left.ActorName == $right.UserPrincipalName\n| extend path = parse_url(FlowDetailsUrl).Path\n| extend EnvironmentId = tostring(split(path, \"/\")[2])\n| extend FlowId = tostring(split(path, \"/\")[-2])\n| lookup InventoryEnvironments on EnvironmentId\n| lookup InventoryFlows on $left.FlowId == $right.ResourceId\n| extend\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    CdsInstanceUrl = iif(isempty(CdsInstanceUrl), \"*Unresolved*\", CdsInstanceUrl),\n    FlowDetails = bag_pack_columns(Name, SubType, SharedUsers, SharedGroups),\n    AccountName = tostring(split(ActorName, \"@\")[0]),\n    UPNSuffix = tostring(split(ActorName, \"@\")[1]),\n    PowerAutomateAppId = 27592,\n    CloudAppId = 32780\n| project\n    TimeGenerated,\n    EventOriginalType,\n    ActorName,\n    FlowDetails,\n    EnvironmentName,\n    CdsInstanceUrl,\n    EnvironmentId,\n    AccountName,\n    UPNSuffix,\n    PowerAutomateAppId,\n    CloudAppId\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryEnvironments",
                                            "InventoryFlows"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerAutomate",
                                        "dataTypes": [
                                            "PowerAutomateActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Exfiltration",
                                    "Impact"
                                ],
                                "techniques": [
                                    "T1567",
                                    "T1485",
                                    "T1491",
                                    "T0813",
                                    "T0879",
                                    "T0826"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAutomateAppId",
                                                "identifier": "AppId"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "CloudAppId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "CdsInstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName",
                                    "FlowDetails": "FlowDetails"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{ActorName}} is on the terminated employees watchlist and carried out {{EventOriginalType}} in {{EnvironmentName}}",
                                    "alertDisplayNameFormat": "PowerAutomate - Terminated user {{EventOriginalType}} detected"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 9",
                                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Automate - Departing employee flow activity",
                "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
                "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Automate - Unusual bulk deletion of flow resources_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies bulk deletion of Power Automate flows that exceed a predefined threshold defined in the query and deviate from activity patterns observed in the last 14 days.",
                                "displayName": "Power Automate - Unusual bulk deletion of flow resources",
                                "enabled": false,
                                "query": "// minThreshold: Minimum number of apps to be deleted to be considered an anomaly;\n// This is to prevent one-off isolated delete flow to be considered outlier.\n// The Min Threshold can be reduced or increased according to the traffic in the organization.\nlet minThreshold=10;\nlet interval = 1h;\nlet startTime = ago(14d);\nlet endTime = now();\nlet query_frequency = 1h;\nlet flow_deletion_events = PowerAutomateActivity\n    | where TimeGenerated >= startTime\n    | where EventOriginalType =~ \"DeleteFlow\"\n    | extend IngestionTimeGenerated = ingestion_time();\nflow_deletion_events\n| make-series DeletedFlowCount=count() on IngestionTimeGenerated from startTime to endTime step interval by ActorName, UserUpn, ActorUserId\n| extend(Anomalies, AnomalyScore, ExpectedUsage) = series_decompose_anomalies(DeletedFlowCount)\n| mv-expand\n    DeletedFlowCount to typeof(double),\n    IngestionTimeGenerated to typeof(datetime),\n    Anomalies to typeof(double),\n    AnomalyScore to typeof(double),\n    ExpectedUsage to typeof(long)\n| where IngestionTimeGenerated >= ago(query_frequency)\n| where Anomalies != 0 and DeletedFlowCount >= minThreshold\n| lookup (flow_deletion_events\n    | where IngestionTimeGenerated >= ago(query_frequency))\n    on ActorName, UserUpn, ActorUserId\n| extend\n    AccountName = tostring(split(ActorName, \"@\")[0]),\n    UPNSuffix = tostring(split(ActorName, \"@\")[1]),\n    PowerAutomateAppId = 27592\n| project\n    TimeGenerated,\n    ActorName,\n    DeletedFlowCount,\n    ExpectedUsage,\n    Anomalies,\n    AnomalyScore,\n    AccountName,\n    UPNSuffix,\n    PowerAutomateAppId,\n    UserUpn,\n    ActorUserId\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P14D",
                                "severity": "Medium",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerAutomate",
                                        "dataTypes": [
                                            "PowerAutomateActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Impact",
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1485",
                                    "T0828",
                                    "T1562"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "PowerAutomateAppId",
                                                "identifier": "AppId"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "DeletedFlowCount": "DeletedFlowCount"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "User {{ActorName}}  deleted {{DeletedFlowCount}} flows in the last hour, surpassing the bulk delete threshold. This is anomalous compared to the past 14 days.",
                                    "alertDisplayNameFormat": "Power Automate - unusual bulk deletion of {{DeletedFlowCount}} flows"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 10",
                                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Automate - Unusual bulk deletion of flow resources",
                "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
                "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject11').analyticRuleTemplateSpecName11]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Platform - Connector added to a sensitive environment_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject11').analyticRuleVersion11]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies occurrences of new API connector creations within Power Platform, specifically targeting a predefined list of sensitive environments.",
                                "displayName": "Power Platform - Connector added to a sensitive environment",
                                "enabled": false,
                                "query": "let sensitive_environment_id = dynamic([\n    // Specify the list of sensitive power platform environment ID's to monitor here.\n    // Example: \"10e72012-8886-41ec-b973-250286419b38\", \"183c7056-7ed0-426f-8ae6-69819cf72259\"\n    ]);\nlet query_frequency = 1h;\nPowerPlatformConnectorActivity\n| where ingestion_time() >= ago (query_frequency)\n| where EventOriginalType == \"PutConnection\"\n| extend EnvironmentId = tostring(AdditionalInfo.environmentName)\n| where EnvironmentId in (sensitive_environment_id)\n| lookup InventoryEnvironments on EnvironmentId\n| lookup InventoryAppsConnections on $left.ConnectorId == $right.ConnectionName\n| extend\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    CdsInstanceUrl = iif(isempty(CdsInstanceUrl), \"*Unresolved*\", CdsInstanceUrl),\n    ConnectorDetails = bag_pack_columns(DisplayName, ApiId, CreatedTime, CreatedPrincipalId),\n    AccountName = tostring(split(ActorName, \"@\")[0]),\n    UPNSuffix = tostring(split(ActorName, \"@\")[1]),\n    DataverseId = 32780\n| project\n    TimeGenerated,\n    EventOriginalType,\n    ActorName,\n    SrcIpAddr,\n    ConnectorId,\n    ConnectorDetails,\n    EnvironmentId,\n    EnvironmentName,\n    CdsInstanceUrl,\n    AccountName,\n    UPNSuffix,\n    DataverseId\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P7D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformInventory",
                                        "dataTypes": [
                                            "InventoryApps",
                                            "InventoryEnvironments",
                                            "InventoryAppsConnections"
                                        ]
                                    },
                                    {
                                        "connectorId": "PowerPlatformConnector",
                                        "dataTypes": [
                                            "PowerPlatformConnectorActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "Execution",
                                    "Exfiltration"
                                ],
                                "techniques": [
                                    "T0871",
                                    "T1567",
                                    "T1537"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "SrcIpAddr",
                                                "identifier": "Address"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "DataverseId",
                                                "identifier": "AppId"
                                            },
                                            {
                                                "columnName": "CdsInstanceUrl",
                                                "identifier": "InstanceName"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "ConnectorDetails": "ConnectorDetails",
                                    "EnvironmentId": "EnvironmentId",
                                    "EnvironmentName": "EnvironmentName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "{{ActorName}} added a new API connector in {{EnvironmentName}}. This environment has been deemed sensitive.",
                                    "alertDisplayNameFormat": "New Power Platform connector added in {{EnvironmentName}}"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject11').analyticRuleId11,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 11",
                                "parentId": "[variables('analyticRuleObject11').analyticRuleId11]",
                                "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject11').analyticRuleVersion11]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Platform - Connector added to a sensitive environment",
                "contentProductId": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
                "id": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
                "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject12').analyticRuleTemplateSpecName12]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Platform - DLP policy updated or removed_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject12').analyticRuleVersion12]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies changes to DLP policy, specifically policies which are updated or removed.",
                                "displayName": "Power Platform - DLP policy updated or removed",
                                "enabled": false,
                                "query": "let create_policy_ignore_time_window = 10m;\nlet query_frequency = 1h;\nlet AllEvents = materialize(\n    PowerPlatformDlpActivity\n    | extend PolicyId = tostring(AdditionalInfo.policyId)\n    | project\n        TimeGenerated,\n        PolicyName,\n        EventOriginalType,\n        PolicyId,\n        ActorName,\n        AdditionalInfo\n    );\nlet delete_events = AllEvents\n    | where EventOriginalType == \"DeleteDlpPolicy\";\nlet update_events = AllEvents\n    | where EventOriginalType == \"UpdateDlpPolicy\";\nlet create_events = AllEvents\n    | where EventOriginalType == \"CreateDlpPolicy\"\n    | extend ignore_time = TimeGenerated + create_policy_ignore_time_window;\nunion\n    delete_events,\n    (update_events\n    | join kind=leftouter (\n        create_events\n        | project-away TimeGenerated\n        )\n        on PolicyId\n    | where isempty(ignore_time) or TimeGenerated > ignore_time\n    | project-away ignore_time)\n| where TimeGenerated >=ago(query_frequency)\n| extend\n    AccountName = tostring(split(ActorName, \"@\")[0]),\n    UPNSuffix = tostring(split(ActorName, \"@\")[1])\n| project\n    TimeGenerated,\n    ActorName,\n    EventOriginalType,\n    PolicyName,\n    PolicyId,\n    AccountName,\n    UPNSuffix,\n    AdditionalInfo\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P1D",
                                "severity": "Low",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "PowerPlatformDLP",
                                        "dataTypes": [
                                            "PowerPlatformDlpActivity"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "DefenseEvasion"
                                ],
                                "techniques": [
                                    "T1480"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "PolicyId": "PolicyId",
                                    "PolicyName": "PolicyName"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "A DLP policy {{PolicyName}} was as modfiied or deleted. Event type {{EventOriginalType}}",
                                    "alertDisplayNameFormat": "PowerPlatform - DLP policy {{EventOriginalType}} event detected."
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject12').analyticRuleId12,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 12",
                                "parentId": "[variables('analyticRuleObject12').analyticRuleId12]",
                                "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject12').analyticRuleVersion12]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Platform - DLP policy updated or removed",
                "contentProductId": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
                "id": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
                "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('analyticRuleObject13').analyticRuleTemplateSpecName13]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Platform - Possibly compromised user accesses Power Platform services_AnalyticalRules Analytics Rule with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('analyticRuleObject13').analyticRuleVersion13]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
                            "name": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                            "apiVersion": "2022-04-01-preview",
                            "kind": "Scheduled",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "description": "Identifies user accounts flagged at risk in Microsoft Entra Identity Protection and correlates these users with sign-in activity in Power Platform, including Power Apps, Power Automate and Power Platform Admin Center.",
                                "displayName": "Power Platform - Possibly compromised user accesses Power Platform services",
                                "enabled": false,
                                "query": "let power_automate_appid = \"6204c1d1-4712-4c46-a7d9-3ed63d992682\";\nlet power_apps_appid = \"a8f7a65c-f5ba-4859-b2d6-df772c264e9d\";\nlet ppac_appid = \"065d9450-1e87-434e-ac2f-69af271549ed\";\nlet query_frequency = 1h;\nSigninLogs\n| where ingestion_time() >= ago(query_frequency)\n| where array_length(todynamic(RiskEventTypes)) != 0 or array_length(todynamic(RiskEventTypes_V2)) != 0\n| where AppId in (power_automate_appid, power_apps_appid, ppac_appid)\n| extend AffectedPlatform = case(\n                                AppId == ppac_appid,\n                                \"Power Platform Admin Center\",\n                                AppId == power_apps_appid,\n                                \"Power Apps\",\n                                AppId == power_automate_appid,\n                                \"Power Automate\",\n                                \"Unknown\"\n                            )\n| extend\n    Severity = iif(AffectedPlatform in (\"Power Apps\", \"Power Automate\"), \"Medium\", \"High\"),\n    CloudAppId = case(AffectedPlatform == \"Power Apps\", int(27593), AffectedPlatform == \"Power Automate\", int(27592), 0),\n    AccountName = tostring(split(UserPrincipalName, '@')[0]),\n    UPNSuffix = tostring(split(UserPrincipalName, '@')[1])\n| project\n    TimeGenerated,\n    UserId,\n    UniqueTokenIdentifier,\n    Identity,\n    RiskEventTypes,\n    RiskEventTypes_V2,\n    UserPrincipalName,\n    AppId,\n    AppDisplayName,\n    AffectedPlatform,\n    IPAddress,\n    Severity,\n    CloudAppId,\n    AccountName,\n    UPNSuffix\n",
                                "queryFrequency": "PT1H",
                                "queryPeriod": "P1D",
                                "severity": "High",
                                "suppressionDuration": "PT1H",
                                "suppressionEnabled": false,
                                "triggerOperator": "GreaterThan",
                                "triggerThreshold": 0,
                                "status": "Available",
                                "requiredDataConnectors": [
                                    {
                                        "connectorId": "AzureActiveDirectory",
                                        "dataTypes": [
                                            "SigninLogs"
                                        ]
                                    }
                                ],
                                "tactics": [
                                    "InitialAccess",
                                    "LateralMovement"
                                ],
                                "techniques": [
                                    "T1078",
                                    "T1210"
                                ],
                                "entityMappings": [
                                    {
                                        "entityType": "Account",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AccountName",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "UPNSuffix",
                                                "identifier": "UPNSuffix"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "IP",
                                        "fieldMappings": [
                                            {
                                                "columnName": "IPAddress",
                                                "identifier": "Address"
                                            }
                                        ]
                                    },
                                    {
                                        "entityType": "CloudApplication",
                                        "fieldMappings": [
                                            {
                                                "columnName": "AffectedPlatform",
                                                "identifier": "Name"
                                            },
                                            {
                                                "columnName": "AppId",
                                                "identifier": "AppId"
                                            }
                                        ]
                                    }
                                ],
                                "eventGroupingSettings": {
                                    "aggregationKind": "SingleAlert"
                                },
                                "customDetails": {
                                    "RiskEventTypes": "RiskEventTypes",
                                    "RiskEventTypes_V2": "RiskEventTypes_V2"
                                },
                                "alertDetailsOverride": {
                                    "alertDescriptionFormat": "The user {{UserPrincipalName}} has sign-in risk events associated and successfully signed in to {{{AffectedPlatform}} from {{IPAddress}}",
                                    "alertDisplayNameFormat": "Risky user sign-in activity in {{{AffectedPlatform}} ",
                                    "alertSeverityColumnName": "Severity"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject13').analyticRuleId13,'/'))))]",
                            "properties": {
                                "description": "Power Platform Analytics Rule 13",
                                "parentId": "[variables('analyticRuleObject13').analyticRuleId13]",
                                "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                                "kind": "AnalyticsRule",
                                "version": "[variables('analyticRuleObject13').analyticRuleVersion13]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                "contentKind": "AnalyticsRule",
                "displayName": "Power Platform - Possibly compromised user accesses Power Platform services",
                "contentProductId": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
                "id": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
                "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "Power Apps - Anomalous bulk sharing of Power App to newly created guest users_HuntingQueries Hunting Query with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.OperationalInsights/savedSearches",
                            "apiVersion": "2022-10-01",
                            "name": "Power_Platform_Hunting_Query_1",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "Power Apps - Anomalous bulk sharing of Power App to newly created guest users",
                                "category": "Hunting Queries",
                                "query": "////////////\n// Please replace the allowed_domains with a list of domains of your partners/sibling orgs\n// with whom you generally share power apps with. This will allow us to filter\n// legitimate bulk sharing attempts. Avoid using domains such as gmail, outlook, etc.\n///////////\nlet allowed_domains = pack_array(\"contoso.com\");\nlet start = ago(14d);\nlet end = now();\nlet interval = 1h;\nPowerAppsActivity\n| where EventOriginalType == \"PowerAppPermissionEdited\"\n| extend\n    TargetAppName = replace_string(TargetAppName, \"/providers/Microsoft.PowerApps/apps/\", \"\"),\n    TargetObjectId = tostring(AdditionalInfo.targetObjectId),\n    EnvironmentId = tostring(AdditionalInfo.environmentName)\n| join kind=leftouter (AuditLogs\n    | where ActivityDateTime >= ago(14d)\n    | where SourceSystem =~ \"Azure AD\" and OperationName == \"Invite external user\"\n    | where Result =~ \"success\"\n    | extend InvitedOrgEmail = tostring(parse_json(AdditionalDetails[5])['value'])\n    | extend InvitedOrgDomain = tostring(split(InvitedOrgEmail, \"@\")[1])\n    | where not(InvitedOrgDomain has_any(allowed_domains))\n    | extend\n        InvitedById = tostring(parse_json(InitiatedBy)['user']['id']),\n        InvitedByUPN = tostring(parse_json(InitiatedBy)['user']['userPrincipalName']),\n        InvitedEmail = tostring(parse_json(TargetResources[0])['userPrincipalName']),\n        InvitedId = tostring(parse_json(TargetResources[0])['id'])\n    | summarize by InvitedById, InvitedByUPN, InvitedEmail, InvitedId, InvitedOrgDomain)\n    on $left.TargetObjectId == $right.InvitedId\n| where isnotempty(InvitedId)\n| make-series counter=dcount(TargetObjectId) default=0 on TimeGenerated in range(start, end, interval) by TargetAppName, EnvironmentId, InvitedById, InvitedByUPN\n| extend(Anomalies, AnomalyScore, ExpectedUsage) = series_decompose_anomalies(counter)\n| mv-expand\n    counter to typeof(double),\n    TimeGenerated to typeof(datetime),\n    Anomalies to typeof(double),\n    AnomalyScore to typeof(double),\n    ExpectedUsage to typeof(long)\n| where Anomalies != 0\n| lookup InventoryEnvironments on EnvironmentId\n| lookup InventoryApps on $left.TargetAppName == $right.ResourceId\n| extend\n    PowerAppsAppName = iif(isempty(Name), \"*Unresolved*\", Name),\n    EnvironmentName = iif(isempty(EnvironmentName), \"*Unresolved*\", EnvironmentName),\n    PowerAppsEntityId = 27593,\n    AccountName = tostring(split(InvitedByUPN, '@')[0]),\n    UPNSuffix = tostring(split(InvitedByUPN, '@')[1])\n| project\n    TimeGenerated,\n    ActualUsage=counter,\n    ExpectedUsage,\n    AnomalyScore,\n    Anomalies,\n    TargetAppName,\n    PowerAppsAppName,\n    InvitedById,\n    InvitedByUPN,\n    EnvironmentName,\n    EnvironmentId,\n    PowerAppsEntityId,\n    AccountName,\n    UPNSuffix\n",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "The query detects anomalous attempts to perform bulk sharing of Power App to newly created guest users."
                                    },
                                    {
                                        "name": "tactics",
                                        "value": "ResourceDevelopment,InitialAccess,LateralMovement"
                                    },
                                    {
                                        "name": "techniques",
                                        "value": "T1587,T1566,T1534"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
                            "properties": {
                                "description": "Power Platform Hunting Query 1",
                                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                                "kind": "HuntingQuery",
                                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Power Platform",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "contentKind": "HuntingQuery",
                "displayName": "Power Apps - Anomalous bulk sharing of Power App to newly created guest users",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '3.0.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '3.0.0')))]",
                "version": "3.0.0"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('parserObject1').parserTemplateSpecName1]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "InventoryApps Data Parser with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('parserObject1').parserVersion1]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[variables('parserObject1')._parserName1]",
                            "apiVersion": "2022-10-01",
                            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "InventoryApps",
                                "category": "MSBizAppsFunctions",
                                "functionAlias": "InventoryApps",
                                "query": "let InventoryApps_definition = datatable (\n    Name: string,\n    ResourceId: string,\n    PowerAppsType: string,\n    Settings: dynamic,\n    SharedGroups: int,\n    SharedUsers: int,\n    Solution: dynamic,\n    Owner: string,\n    SubType: string,\n    EnvironmentTenantId: string,\n    Uri: string,\n    ActionsresourceworkflowActions: dynamic,\n    ClientDeviceType: dynamic,\n    CreatedPrincipalId: string,\n    CreatedTime: datetime,\n    CreationType: dynamic,\n    CustomExtensions: dynamic,\n    Description: string,\n    DocumentUri: dynamic,\n    DocumentVersion: string,\n    EmbeddingHost: dynamic,\n    EnvironmentId: string,\n    IconUri: dynamic,\n    IsDeleted: bool,\n    LastEnabledPrincipalId: string,\n    LastEnabledTime: datetime,\n    LastModifiedPrincipalId: string,\n    LastModifiedTime: datetime,\n    LifecycleState: string,\n    TenantId: string,\n    Type: string\n) [\n    '_', '_', '_', '_', 0, 0, '_', '_', '_', '_', '_', '_', '_', '_', datetime(null), '_', '_', '_', '_', '_', '_', '_', '_', false, '_', datetime(null), '_', datetime(null), '_', '_', '_'\n];\nlet InventoryApps_data = (\n    PowerApps_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by ResourceId\n    | project\n        TimeGenerated,\n        Name = tostring(column_ifexists('Name', '_')),\n        ResourceId = tolower(tostring(column_ifexists('ResourceId', '_'))),\n        PowerAppsType = tostring(column_ifexists('PowerAppsType', '_')),\n        Settings = todynamic(column_ifexists('Settings', '_')),\n        SharedGroups = toint(column_ifexists('SharedGroups', 0)),\n        SharedUsers = toint(column_ifexists('SharedUsers', 0)),\n        Solution = todynamic(column_ifexists('Solution', '_')),\n        Owner = tostring(column_ifexists('Owner', '_')),\n        SubType = tostring(column_ifexists('SubType', '_')),\n        EnvironmentTenantId = tostring(column_ifexists('EnvironmentTenantId', '_')),\n        Uri = tostring(column_ifexists('Uri', '_')),\n        ActionsresourceworkflowActions = todynamic(column_ifexists('ActionsresourceworkflowActions', '_')),\n        ClientDeviceType = todynamic(column_ifexists('ClientDeviceType', '_')),\n        CreatedPrincipalId = tostring(column_ifexists('CreatedPrincipalId', '_')),\n        CreatedTime = todatetime(column_ifexists('CreatedTime', datetime(null))),\n        CreationType = todynamic(column_ifexists('CreationType', '_')),\n        CustomExtensions = todynamic(column_ifexists('CustomExtensions', '_')),\n        Description = tostring(column_ifexists('Description', '_')),\n        DocumentUri = todynamic(column_ifexists('DocumentUri', '_')),\n        DocumentVersion = tostring(column_ifexists('DocumentVersion', '_')),\n        EmbeddingHost = todynamic(column_ifexists('EmbeddingHost', '_')),\n        EnvironmentId = tostring(column_ifexists('EnvironmentId', '_')),\n        IconUri = todynamic(column_ifexists('IconUri', '_')),\n        IsDeleted = tobool(column_ifexists('IsDeleted', false)),\n        LastEnabledPrincipalId = tostring(column_ifexists('LastEnabledPrincipalId', '_')),\n        LastEnabledTime = todatetime(column_ifexists('LastEnabledTime', datetime(null))),\n        LastModifiedPrincipalId = tostring(column_ifexists('LastModifiedPrincipalId', '_')),\n        LastModifiedTime = todatetime(column_ifexists('LastModifiedTime', datetime(null))),\n        LifecycleState = tostring(column_ifexists('LifecycleState', '_')),\n        TenantId = tostring(column_ifexists('TenantId', '_')),\n        Type = tostring(column_ifexists('Type', '_'))\n    );\nInventoryApps_data\n| union isfuzzy = true (InventoryApps_definition)\n| where ResourceId != '_'\n| project\n    Name,\n    ResourceId,\n    PowerAppsType,\n    Settings,\n    SharedGroups,\n    SharedUsers,\n    Solution,\n    Owner,\n    SubType,\n    EnvironmentTenantId,\n    Uri,\n    ActionsresourceworkflowActions,\n    ClientDeviceType,\n    CreatedPrincipalId,\n    CreatedTime,\n    CreationType,\n    CustomExtensions,\n    Description,\n    DocumentUri,\n    DocumentVersion,\n    EmbeddingHost,\n    EnvironmentId,\n    IconUri,\n    IsDeleted,\n    LastEnabledPrincipalId,\n    LastEnabledTime,\n    LastModifiedPrincipalId,\n    LastModifiedTime,\n    LifecycleState,\n    TenantId,\n    Type\n",
                                "functionParameters": "QueryLookback:timespan=7d",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "InventoryApps"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
                            "dependsOn": [
                                "[variables('parserObject1')._parserId1]"
                            ],
                            "properties": {
                                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryApps')]",
                                "contentId": "[variables('parserObject1').parserContentId1]",
                                "kind": "Parser",
                                "version": "[variables('parserObject1').parserVersion1]",
                                "source": {
                                    "name": "Power Platform",
                                    "kind": "Solution",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "contentKind": "Parser",
                "displayName": "InventoryApps",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '3.1.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '3.1.0')))]",
                "version": "[variables('parserObject1').parserVersion1]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2022-10-01",
            "name": "[variables('parserObject1')._parserName1]",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "eTag": "*",
                "displayName": "InventoryApps",
                "category": "MSBizAppsFunctions",
                "functionAlias": "InventoryApps",
                "query": "let InventoryApps_definition = datatable (\n    Name: string,\n    ResourceId: string,\n    PowerAppsType: string,\n    Settings: dynamic,\n    SharedGroups: int,\n    SharedUsers: int,\n    Solution: dynamic,\n    Owner: string,\n    SubType: string,\n    EnvironmentTenantId: string,\n    Uri: string,\n    ActionsresourceworkflowActions: dynamic,\n    ClientDeviceType: dynamic,\n    CreatedPrincipalId: string,\n    CreatedTime: datetime,\n    CreationType: dynamic,\n    CustomExtensions: dynamic,\n    Description: string,\n    DocumentUri: dynamic,\n    DocumentVersion: string,\n    EmbeddingHost: dynamic,\n    EnvironmentId: string,\n    IconUri: dynamic,\n    IsDeleted: bool,\n    LastEnabledPrincipalId: string,\n    LastEnabledTime: datetime,\n    LastModifiedPrincipalId: string,\n    LastModifiedTime: datetime,\n    LifecycleState: string,\n    TenantId: string,\n    Type: string\n) [\n    '_', '_', '_', '_', 0, 0, '_', '_', '_', '_', '_', '_', '_', '_', datetime(null), '_', '_', '_', '_', '_', '_', '_', '_', false, '_', datetime(null), '_', datetime(null), '_', '_', '_'\n];\nlet InventoryApps_data = (\n    PowerApps_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by ResourceId\n    | project\n        TimeGenerated,\n        Name = tostring(column_ifexists('Name', '_')),\n        ResourceId = tolower(tostring(column_ifexists('ResourceId', '_'))),\n        PowerAppsType = tostring(column_ifexists('PowerAppsType', '_')),\n        Settings = todynamic(column_ifexists('Settings', '_')),\n        SharedGroups = toint(column_ifexists('SharedGroups', 0)),\n        SharedUsers = toint(column_ifexists('SharedUsers', 0)),\n        Solution = todynamic(column_ifexists('Solution', '_')),\n        Owner = tostring(column_ifexists('Owner', '_')),\n        SubType = tostring(column_ifexists('SubType', '_')),\n        EnvironmentTenantId = tostring(column_ifexists('EnvironmentTenantId', '_')),\n        Uri = tostring(column_ifexists('Uri', '_')),\n        ActionsresourceworkflowActions = todynamic(column_ifexists('ActionsresourceworkflowActions', '_')),\n        ClientDeviceType = todynamic(column_ifexists('ClientDeviceType', '_')),\n        CreatedPrincipalId = tostring(column_ifexists('CreatedPrincipalId', '_')),\n        CreatedTime = todatetime(column_ifexists('CreatedTime', datetime(null))),\n        CreationType = todynamic(column_ifexists('CreationType', '_')),\n        CustomExtensions = todynamic(column_ifexists('CustomExtensions', '_')),\n        Description = tostring(column_ifexists('Description', '_')),\n        DocumentUri = todynamic(column_ifexists('DocumentUri', '_')),\n        DocumentVersion = tostring(column_ifexists('DocumentVersion', '_')),\n        EmbeddingHost = todynamic(column_ifexists('EmbeddingHost', '_')),\n        EnvironmentId = tostring(column_ifexists('EnvironmentId', '_')),\n        IconUri = todynamic(column_ifexists('IconUri', '_')),\n        IsDeleted = tobool(column_ifexists('IsDeleted', false)),\n        LastEnabledPrincipalId = tostring(column_ifexists('LastEnabledPrincipalId', '_')),\n        LastEnabledTime = todatetime(column_ifexists('LastEnabledTime', datetime(null))),\n        LastModifiedPrincipalId = tostring(column_ifexists('LastModifiedPrincipalId', '_')),\n        LastModifiedTime = todatetime(column_ifexists('LastModifiedTime', datetime(null))),\n        LifecycleState = tostring(column_ifexists('LifecycleState', '_')),\n        TenantId = tostring(column_ifexists('TenantId', '_')),\n        Type = tostring(column_ifexists('Type', '_'))\n    );\nInventoryApps_data\n| union isfuzzy = true (InventoryApps_definition)\n| where ResourceId != '_'\n| project\n    Name,\n    ResourceId,\n    PowerAppsType,\n    Settings,\n    SharedGroups,\n    SharedUsers,\n    Solution,\n    Owner,\n    SubType,\n    EnvironmentTenantId,\n    Uri,\n    ActionsresourceworkflowActions,\n    ClientDeviceType,\n    CreatedPrincipalId,\n    CreatedTime,\n    CreationType,\n    CustomExtensions,\n    Description,\n    DocumentUri,\n    DocumentVersion,\n    EmbeddingHost,\n    EnvironmentId,\n    IconUri,\n    IsDeleted,\n    LastEnabledPrincipalId,\n    LastEnabledTime,\n    LastModifiedPrincipalId,\n    LastModifiedTime,\n    LifecycleState,\n    TenantId,\n    Type\n",
                "functionParameters": "QueryLookback:timespan=7d",
                "version": 2,
                "tags": [
                    {
                        "name": "description",
                        "value": "InventoryApps"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
            "dependsOn": [
                "[variables('parserObject1')._parserId1]"
            ],
            "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryApps')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('parserObject2').parserTemplateSpecName2]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "InventoryAppsConnections Data Parser with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('parserObject2').parserVersion2]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[variables('parserObject2')._parserName2]",
                            "apiVersion": "2022-10-01",
                            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "InventoryAppsConnections",
                                "category": "MSBizAppsFunctions",
                                "functionAlias": "InventoryAppsConnections",
                                "query": "let InventoryAppsConnections_definition = datatable (\n    ConnectionId: string,\n    ConnectionName: string,\n    ApiId: string,\n    DisplayName: string,\n    CreatedTime: datetime,\n    CreatedPrincipalId: string,\n    EnvironmentId: string,\n    IsCustomApI: string,\n    LastModifiedTime: datetime,\n    SwaggerUrl: string,\n    EnvironmentTenantId: string,\n    Tier: string,\n    LastModifiedPrincipalId: string,\n    LastEnabledTime: datetime,\n    LastEnabledPrincipalId: string,\n    DeletedPrincipalId: string,\n    DeletedTime: datetime,\n    Owner: string\n) [\n    '_', '_', '_', '_', datetime(null), '_', '_', '_', datetime(null), '_', '_', '_', '_', datetime(null), '_', '_', datetime(null), '_'\n];\nlet InventoryAppsConnections_data = (\n    PowerAppsConnections_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by ConnectionId\n    | project\n        TimeGenerated,\n        ConnectionId = tostring(column_ifexists('ConnectionId', '_')),\n        ConnectionName = tostring(column_ifexists('ConnectionName', '_')),\n        ApiId = tostring(column_ifexists('ApiId', '_')),\n        DisplayName = tostring(column_ifexists('DisplayName', '_')),\n        CreatedTime = todatetime(column_ifexists('CreatedTime', datetime(null))),\n        CreatedPrincipalId = tostring(column_ifexists('CreatedPrincipalId', '_')),\n        EnvironmentId = tostring(column_ifexists('EnvironmentId', '_')),\n        IsCustomApI = tostring(column_ifexists('IsCustomApI', '_')),\n        LastModifiedTime = todatetime(column_ifexists('LastModifiedTime', datetime(null))),\n        SwaggerUrl = tostring(column_ifexists('SwaggerUrl', '_')),\n        EnvironmentTenantId = tostring(column_ifexists('EnvironmentTenantId', '_')),\n        Tier = tostring(column_ifexists('Tier', '_')),\n        LastModifiedPrincipalId = tostring(column_ifexists('LastModifiedPrincipalId', '_')),\n        LastEnabledTime = todatetime(column_ifexists('LastEnabledTime', datetime(null))),\n        LastEnabledPrincipalId = tostring(column_ifexists('LastEnabledPrincipalId', '_')),\n        DeletedPrincipalId = tostring(column_ifexists('DeletedPrincipalId', '_')),\n        DeletedTime = todatetime(column_ifexists('DeletedTime', datetime(null))),\n        Owner = tostring(column_ifexists('Owner', '_'))\n    );\nInventoryAppsConnections_data\n| union isfuzzy = true (InventoryAppsConnections_definition)\n| where ConnectionId != '_'\n| project\n    ConnectionId,\n    ConnectionName,\n    ApiId,\n    DisplayName,\n    CreatedTime,\n    CreatedPrincipalId,\n    EnvironmentId,\n    IsCustomApI,\n    LastModifiedTime,\n    SwaggerUrl,\n    EnvironmentTenantId,\n    Tier,\n    LastModifiedPrincipalId,\n    LastEnabledTime,\n    LastEnabledPrincipalId,\n    DeletedPrincipalId,\n    DeletedTime,\n    Owner\n",
                                "functionParameters": "QueryLookback:timespan=7d",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "InventoryAppsConnections"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
                            "dependsOn": [
                                "[variables('parserObject2')._parserId2]"
                            ],
                            "properties": {
                                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryAppsConnections')]",
                                "contentId": "[variables('parserObject2').parserContentId2]",
                                "kind": "Parser",
                                "version": "[variables('parserObject2').parserVersion2]",
                                "source": {
                                    "name": "Power Platform",
                                    "kind": "Solution",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "contentKind": "Parser",
                "displayName": "InventoryAppsConnections",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '3.1.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '3.1.0')))]",
                "version": "[variables('parserObject2').parserVersion2]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2022-10-01",
            "name": "[variables('parserObject2')._parserName2]",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "eTag": "*",
                "displayName": "InventoryAppsConnections",
                "category": "MSBizAppsFunctions",
                "functionAlias": "InventoryAppsConnections",
                "query": "let InventoryAppsConnections_definition = datatable (\n    ConnectionId: string,\n    ConnectionName: string,\n    ApiId: string,\n    DisplayName: string,\n    CreatedTime: datetime,\n    CreatedPrincipalId: string,\n    EnvironmentId: string,\n    IsCustomApI: string,\n    LastModifiedTime: datetime,\n    SwaggerUrl: string,\n    EnvironmentTenantId: string,\n    Tier: string,\n    LastModifiedPrincipalId: string,\n    LastEnabledTime: datetime,\n    LastEnabledPrincipalId: string,\n    DeletedPrincipalId: string,\n    DeletedTime: datetime,\n    Owner: string\n) [\n    '_', '_', '_', '_', datetime(null), '_', '_', '_', datetime(null), '_', '_', '_', '_', datetime(null), '_', '_', datetime(null), '_'\n];\nlet InventoryAppsConnections_data = (\n    PowerAppsConnections_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by ConnectionId\n    | project\n        TimeGenerated,\n        ConnectionId = tostring(column_ifexists('ConnectionId', '_')),\n        ConnectionName = tostring(column_ifexists('ConnectionName', '_')),\n        ApiId = tostring(column_ifexists('ApiId', '_')),\n        DisplayName = tostring(column_ifexists('DisplayName', '_')),\n        CreatedTime = todatetime(column_ifexists('CreatedTime', datetime(null))),\n        CreatedPrincipalId = tostring(column_ifexists('CreatedPrincipalId', '_')),\n        EnvironmentId = tostring(column_ifexists('EnvironmentId', '_')),\n        IsCustomApI = tostring(column_ifexists('IsCustomApI', '_')),\n        LastModifiedTime = todatetime(column_ifexists('LastModifiedTime', datetime(null))),\n        SwaggerUrl = tostring(column_ifexists('SwaggerUrl', '_')),\n        EnvironmentTenantId = tostring(column_ifexists('EnvironmentTenantId', '_')),\n        Tier = tostring(column_ifexists('Tier', '_')),\n        LastModifiedPrincipalId = tostring(column_ifexists('LastModifiedPrincipalId', '_')),\n        LastEnabledTime = todatetime(column_ifexists('LastEnabledTime', datetime(null))),\n        LastEnabledPrincipalId = tostring(column_ifexists('LastEnabledPrincipalId', '_')),\n        DeletedPrincipalId = tostring(column_ifexists('DeletedPrincipalId', '_')),\n        DeletedTime = todatetime(column_ifexists('DeletedTime', datetime(null))),\n        Owner = tostring(column_ifexists('Owner', '_'))\n    );\nInventoryAppsConnections_data\n| union isfuzzy = true (InventoryAppsConnections_definition)\n| where ConnectionId != '_'\n| project\n    ConnectionId,\n    ConnectionName,\n    ApiId,\n    DisplayName,\n    CreatedTime,\n    CreatedPrincipalId,\n    EnvironmentId,\n    IsCustomApI,\n    LastModifiedTime,\n    SwaggerUrl,\n    EnvironmentTenantId,\n    Tier,\n    LastModifiedPrincipalId,\n    LastEnabledTime,\n    LastEnabledPrincipalId,\n    DeletedPrincipalId,\n    DeletedTime,\n    Owner\n",
                "functionParameters": "QueryLookback:timespan=7d",
                "version": 2,
                "tags": [
                    {
                        "name": "description",
                        "value": "InventoryAppsConnections"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
            "dependsOn": [
                "[variables('parserObject2')._parserId2]"
            ],
            "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryAppsConnections')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('parserObject3').parserTemplateSpecName3]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "InventoryEnvironments Data Parser with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('parserObject3').parserVersion3]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[variables('parserObject3')._parserName3]",
                            "apiVersion": "2022-10-01",
                            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "InventoryEnvironments",
                                "category": "MSBizAppsFunctions",
                                "functionAlias": "InventoryEnvironments",
                                "query": "let InventoryEnvironments_definition = datatable (\n    TimeGenerated: datetime,\n    EnvironmentName: string,\n    EnvironmentId: string,\n    CdsInstanceId: string,\n    CdsInstanceUrl: string,\n    CreatedPrincipalId: string,\n    CreatedTime: datetime,\n    DeletedTime: datetime,\n    EnvironmentRegion: string,\n    EnvironmentState: string,\n    EnvironmentType: string,\n    EnvironmentUrl: string,\n    IsDefault: bool,\n    LastModifiedPrincipalId: string,\n    LastModifiedTime: datetime,\n    SecurityGroup: string,\n    TenantGuid: string,\n    TenantId: string\n) [\n    datetime(null), '_', '_', '_', '_', '_', datetime(null), datetime(null), '_', '_', '_', '_', false, '_', datetime(null), '_', '_', '_'\n];\nlet InventoryEnvironments_data = (\n    PowerPlatformEnvironments_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by EnvironmentId\n    | project\n        TimeGenerated = todatetime(column_ifexists('TimeGenerated', datetime(null))),\n        EnvironmentName= tostring(column_ifexists('EnvironmentName', '_')),\n        EnvironmentId= tolower(tostring(column_ifexists('EnvironmentId', '_'))),\n        CdsInstanceId= tostring(column_ifexists('CdsInstanceId', '_')),\n        CdsInstanceUrl= tostring(column_ifexists('CdsInstanceUrl', '_')),\n        CreatedPrincipalId= tostring(column_ifexists('CreatedPrincipalId', '_')),\n        CreatedTime= todatetime(column_ifexists('CreatedTime', datetime(null))),\n        DeletedTime= todatetime(column_ifexists('DeletedTime', datetime(null))),\n        EnvironmentRegion= tostring(column_ifexists('EnvironmentRegion', '_')),\n        EnvironmentState= tostring(column_ifexists('EnvironmentState', '_')),\n        EnvironmentType= tostring(column_ifexists('EnvironmentType', '_')),\n        EnvironmentUrl= tostring(column_ifexists('EnvironmentUrl', '_')),\n        IsDefault= tobool(column_ifexists('IsDefault', false)),\n        LastModifiedPrincipalId= tostring(column_ifexists('LastModifiedPrincipalId', '_')),\n        LastModifiedTime= todatetime(column_ifexists('LastModifiedTime', datetime(null))),\n        SecurityGroup= tostring(column_ifexists('SecurityGroup', '_')),\n        TenantGuid= tostring(column_ifexists('TenantGuid', '_')),\n        TenantId= tostring(column_ifexists('TenantId', '_'))\n    );\nInventoryEnvironments_data\n| union isfuzzy = true (InventoryEnvironments_definition)\n| where EnvironmentId != '_'\n| project\n    EnvironmentName,\n    EnvironmentId,\n    CdsInstanceId,\n    CdsInstanceUrl,\n    CreatedPrincipalId,\n    CreatedTime,\n    DeletedTime,\n    EnvironmentRegion,\n    EnvironmentState,\n    EnvironmentType,\n    EnvironmentUrl,\n    IsDefault,\n    LastModifiedPrincipalId,\n    LastModifiedTime,\n    SecurityGroup,\n    TenantGuid,\n    TenantId\n",
                                "functionParameters": "QueryLookback:timespan=7d",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "InventoryEnvironments"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
                            "dependsOn": [
                                "[variables('parserObject3')._parserId3]"
                            ],
                            "properties": {
                                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryEnvironments')]",
                                "contentId": "[variables('parserObject3').parserContentId3]",
                                "kind": "Parser",
                                "version": "[variables('parserObject3').parserVersion3]",
                                "source": {
                                    "name": "Power Platform",
                                    "kind": "Solution",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "contentKind": "Parser",
                "displayName": "InventoryEnvironments",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '3.1.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '3.1.0')))]",
                "version": "[variables('parserObject3').parserVersion3]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2022-10-01",
            "name": "[variables('parserObject3')._parserName3]",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "eTag": "*",
                "displayName": "InventoryEnvironments",
                "category": "MSBizAppsFunctions",
                "functionAlias": "InventoryEnvironments",
                "query": "let InventoryEnvironments_definition = datatable (\n    TimeGenerated: datetime,\n    EnvironmentName: string,\n    EnvironmentId: string,\n    CdsInstanceId: string,\n    CdsInstanceUrl: string,\n    CreatedPrincipalId: string,\n    CreatedTime: datetime,\n    DeletedTime: datetime,\n    EnvironmentRegion: string,\n    EnvironmentState: string,\n    EnvironmentType: string,\n    EnvironmentUrl: string,\n    IsDefault: bool,\n    LastModifiedPrincipalId: string,\n    LastModifiedTime: datetime,\n    SecurityGroup: string,\n    TenantGuid: string,\n    TenantId: string\n) [\n    datetime(null), '_', '_', '_', '_', '_', datetime(null), datetime(null), '_', '_', '_', '_', false, '_', datetime(null), '_', '_', '_'\n];\nlet InventoryEnvironments_data = (\n    PowerPlatformEnvironments_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by EnvironmentId\n    | project\n        TimeGenerated = todatetime(column_ifexists('TimeGenerated', datetime(null))),\n        EnvironmentName= tostring(column_ifexists('EnvironmentName', '_')),\n        EnvironmentId= tolower(tostring(column_ifexists('EnvironmentId', '_'))),\n        CdsInstanceId= tostring(column_ifexists('CdsInstanceId', '_')),\n        CdsInstanceUrl= tostring(column_ifexists('CdsInstanceUrl', '_')),\n        CreatedPrincipalId= tostring(column_ifexists('CreatedPrincipalId', '_')),\n        CreatedTime= todatetime(column_ifexists('CreatedTime', datetime(null))),\n        DeletedTime= todatetime(column_ifexists('DeletedTime', datetime(null))),\n        EnvironmentRegion= tostring(column_ifexists('EnvironmentRegion', '_')),\n        EnvironmentState= tostring(column_ifexists('EnvironmentState', '_')),\n        EnvironmentType= tostring(column_ifexists('EnvironmentType', '_')),\n        EnvironmentUrl= tostring(column_ifexists('EnvironmentUrl', '_')),\n        IsDefault= tobool(column_ifexists('IsDefault', false)),\n        LastModifiedPrincipalId= tostring(column_ifexists('LastModifiedPrincipalId', '_')),\n        LastModifiedTime= todatetime(column_ifexists('LastModifiedTime', datetime(null))),\n        SecurityGroup= tostring(column_ifexists('SecurityGroup', '_')),\n        TenantGuid= tostring(column_ifexists('TenantGuid', '_')),\n        TenantId= tostring(column_ifexists('TenantId', '_'))\n    );\nInventoryEnvironments_data\n| union isfuzzy = true (InventoryEnvironments_definition)\n| where EnvironmentId != '_'\n| project\n    EnvironmentName,\n    EnvironmentId,\n    CdsInstanceId,\n    CdsInstanceUrl,\n    CreatedPrincipalId,\n    CreatedTime,\n    DeletedTime,\n    EnvironmentRegion,\n    EnvironmentState,\n    EnvironmentType,\n    EnvironmentUrl,\n    IsDefault,\n    LastModifiedPrincipalId,\n    LastModifiedTime,\n    SecurityGroup,\n    TenantGuid,\n    TenantId\n",
                "functionParameters": "QueryLookback:timespan=7d",
                "version": 2,
                "tags": [
                    {
                        "name": "description",
                        "value": "InventoryEnvironments"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
            "dependsOn": [
                "[variables('parserObject3')._parserId3]"
            ],
            "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryEnvironments')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('parserObject4').parserTemplateSpecName4]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "InventoryFlows Data Parser with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('parserObject4').parserVersion4]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[variables('parserObject4')._parserName4]",
                            "apiVersion": "2022-10-01",
                            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "InventoryFlows",
                                "category": "MSBizAppsFunctions",
                                "functionAlias": "InventoryFlows",
                                "query": "let InventoryAppsConnections_definition = datatable (\n    FlowType: string,\n    SubType: string,\n    ResourceId: string,\n    Name: string,\n    EnvironmentTenantId: string,\n    EnvironmentId: string,\n    ResourceVersion: string,\n    LifecycleState: string,\n    EventsCreatedTimestamp: datetime,\n    EventsCreatedPrincipalId: string,\n    EventsModifiedTimestamp: datetime,\n    SharedUsers: int,\n    SharedGroups: int,\n    IsDeleted: bool,\n    WorkflowEntityId: string,\n    FlowSuspensionReason: string,\n    TemplateName: string,\n    FlowFailureAlertSubscribed: bool,\n    SharingType: string,\n) [\n    '_', '_', '_', '_', '_', '_', '_', '_', datetime(null), '_', datetime(null), 0, 0, false, '_', '_', '_', false, '_'\n];\nlet InventoryAppsConnections_data = (\n    PowerAutomateFlows_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by ResourceId\n    | project\n        FlowType = tostring(column_ifexists('FlowType', '_')),\n        SubType = tostring(column_ifexists('SubType', '_')),\n        ResourceId = tostring(column_ifexists('ResourceId', '_')),\n        Name = tostring(column_ifexists('Name', '_')),\n        EnvironmentTenantId = tostring(column_ifexists('EnvironmentTenantId', '_')),\n        EnvironmentId = tostring(column_ifexists('EnvironmentId', '_')),\n        ResourceVersion = tostring(column_ifexists('ResourceVersion', '_')),\n        LifecycleState = tostring(column_ifexists('LifecycleState', '_')),\n        EventsCreatedTimestamp = todatetime(column_ifexists('EventsCreatedTimestamp', datetime(null))),\n        EventsCreatedPrincipalId = tostring(column_ifexists('EventsCreatedPrincipalId', '_')),\n        EventsModifiedTimestamp = todatetime(column_ifexists('EventsModifiedTimestamp', datetime(null))),\n        SharedUsers = toint(column_ifexists('SharedUsers', 0)),\n        SharedGroups = toint(column_ifexists('SharedGroups', 0)),\n        IsDeleted = toboolean(column_ifexists('IsDeleted', false)),\n        WorkflowEntityId = tostring(column_ifexists('WorkflowEntityId', '_')),\n        FlowSuspensionReason = tostring(column_ifexists('FlowSuspensionReason', '_')),\n        TemplateName = tostring(column_ifexists('TemplateName', '_')),\n        FlowFailureAlertSubscribed = toboolean(column_ifexists('FlowFailureAlertSubscribed', false)),\n        SharingType = tostring(column_ifexists('SharingType', '_'))\n    );\nInventoryAppsConnections_data\n| union isfuzzy = true (InventoryAppsConnections_definition)\n| where ResourceId != '_'\n| project\n    FlowType,\n    SubType,\n    ResourceId,\n    Name,\n    EnvironmentTenantId,\n    EnvironmentId,\n    ResourceVersion,\n    LifecycleState,\n    EventsCreatedTimestamp,\n    EventsCreatedPrincipalId,\n    EventsModifiedTimestamp,\n    SharedUsers,\n    SharedGroups,\n    IsDeleted,\n    WorkflowEntityId,\n    FlowSuspensionReason,\n    TemplateName,\n    FlowFailureAlertSubscribed,\n    SharingType\n",
                                "functionParameters": "QueryLookback:timespan=7d",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "InventoryFlows"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
                            "dependsOn": [
                                "[variables('parserObject4')._parserId4]"
                            ],
                            "properties": {
                                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryFlows')]",
                                "contentId": "[variables('parserObject4').parserContentId4]",
                                "kind": "Parser",
                                "version": "[variables('parserObject4').parserVersion4]",
                                "source": {
                                    "name": "Power Platform",
                                    "kind": "Solution",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "contentKind": "Parser",
                "displayName": "InventoryFlows",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '3.1.0')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '3.1.0')))]",
                "version": "[variables('parserObject4').parserVersion4]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2022-10-01",
            "name": "[variables('parserObject4')._parserName4]",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "eTag": "*",
                "displayName": "InventoryFlows",
                "category": "MSBizAppsFunctions",
                "functionAlias": "InventoryFlows",
                "query": "let InventoryAppsConnections_definition = datatable (\n    FlowType: string,\n    SubType: string,\n    ResourceId: string,\n    Name: string,\n    EnvironmentTenantId: string,\n    EnvironmentId: string,\n    ResourceVersion: string,\n    LifecycleState: string,\n    EventsCreatedTimestamp: datetime,\n    EventsCreatedPrincipalId: string,\n    EventsModifiedTimestamp: datetime,\n    SharedUsers: int,\n    SharedGroups: int,\n    IsDeleted: bool,\n    WorkflowEntityId: string,\n    FlowSuspensionReason: string,\n    TemplateName: string,\n    FlowFailureAlertSubscribed: bool,\n    SharingType: string,\n) [\n    '_', '_', '_', '_', '_', '_', '_', '_', datetime(null), '_', datetime(null), 0, 0, false, '_', '_', '_', false, '_'\n];\nlet InventoryAppsConnections_data = (\n    PowerAutomateFlows_CL\n    | where TimeGenerated >= ago(QueryLookback)\n    | summarize arg_max(TimeGenerated, *) by ResourceId\n    | project\n        FlowType = tostring(column_ifexists('FlowType', '_')),\n        SubType = tostring(column_ifexists('SubType', '_')),\n        ResourceId = tostring(column_ifexists('ResourceId', '_')),\n        Name = tostring(column_ifexists('Name', '_')),\n        EnvironmentTenantId = tostring(column_ifexists('EnvironmentTenantId', '_')),\n        EnvironmentId = tostring(column_ifexists('EnvironmentId', '_')),\n        ResourceVersion = tostring(column_ifexists('ResourceVersion', '_')),\n        LifecycleState = tostring(column_ifexists('LifecycleState', '_')),\n        EventsCreatedTimestamp = todatetime(column_ifexists('EventsCreatedTimestamp', datetime(null))),\n        EventsCreatedPrincipalId = tostring(column_ifexists('EventsCreatedPrincipalId', '_')),\n        EventsModifiedTimestamp = todatetime(column_ifexists('EventsModifiedTimestamp', datetime(null))),\n        SharedUsers = toint(column_ifexists('SharedUsers', 0)),\n        SharedGroups = toint(column_ifexists('SharedGroups', 0)),\n        IsDeleted = toboolean(column_ifexists('IsDeleted', false)),\n        WorkflowEntityId = tostring(column_ifexists('WorkflowEntityId', '_')),\n        FlowSuspensionReason = tostring(column_ifexists('FlowSuspensionReason', '_')),\n        TemplateName = tostring(column_ifexists('TemplateName', '_')),\n        FlowFailureAlertSubscribed = toboolean(column_ifexists('FlowFailureAlertSubscribed', false)),\n        SharingType = tostring(column_ifexists('SharingType', '_'))\n    );\nInventoryAppsConnections_data\n| union isfuzzy = true (InventoryAppsConnections_definition)\n| where ResourceId != '_'\n| project\n    FlowType,\n    SubType,\n    ResourceId,\n    Name,\n    EnvironmentTenantId,\n    EnvironmentId,\n    ResourceVersion,\n    LifecycleState,\n    EventsCreatedTimestamp,\n    EventsCreatedPrincipalId,\n    EventsModifiedTimestamp,\n    SharedUsers,\n    SharedGroups,\n    IsDeleted,\n    WorkflowEntityId,\n    FlowSuspensionReason,\n    TemplateName,\n    FlowFailureAlertSubscribed,\n    SharingType\n",
                "functionParameters": "QueryLookback:timespan=7d",
                "version": 2,
                "tags": [
                    {
                        "name": "description",
                        "value": "InventoryFlows"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
            "dependsOn": [
                "[variables('parserObject4')._parserId4]"
            ],
            "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'InventoryFlows')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[variables('parserObject5').parserTemplateSpecName5]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "description": "MSBizAppsTerminatedEmployees Data Parser with template version 3.1.1",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('parserObject5').parserVersion5]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[variables('parserObject5')._parserName5]",
                            "apiVersion": "2022-10-01",
                            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "eTag": "*",
                                "displayName": "MSBizAppsTerminatedEmployees",
                                "category": "MSBizAppsFunctions",
                                "functionAlias": "MSBizAppsTerminatedEmployees",
                                "query": "let TerminatedEmployees_definition = datatable (\n    UserIdentifier: string,\n    UserAADObjectId: string,\n    UserOnPremSid: string,\n    UserPrincipalName: string,\n    UserState: string,\n    NotificationDate: datetime,\n    TerminationDate: datetime,\n    Tags: string\n) [\n    '_', '_', '_', '_', '_', datetime(null), datetime(null), '_'\n];\nlet TerminatedEmployees_data = (\n    _GetWatchlist(TerminatedEmployeesWatchlistAlias)\n    | project\n        UserIdentifier = column_ifexists('User Identifier', '_'),\n        UserAADObjectId = column_ifexists('User AAD Object Id', '_'),\n        UserOnPremSid = column_ifexists('User On-Prem Sid', '_'),\n        UserPrincipalName = column_ifexists('User Principal Name', '_'),\n        UserState = column_ifexists('UserState', '_'),\n        NotificationDate = todatetime(column_ifexists('Notification date', datetime(null))),\n        TerminationDate = todatetime(column_ifexists('Termination date', datetime(null))),\n        Tags = column_ifexists('Tags', '_')\n    );\nTerminatedEmployees_data\n| union isfuzzy = true (TerminatedEmployees_definition)\n| where UserPrincipalName != '_'\n| project\n    UserIdentifier = tostring(UserIdentifier),\n    UserAADObjectId = tostring(UserAADObjectId),\n    UserOnPremSid = tostring(UserOnPremSid),\n    UserPrincipalName = tostring(UserPrincipalName),\n    UserState = tostring(UserState),\n    NotificationDate = todatetime(NotificationDate),\n    TerminationDate = todatetime(TerminationDate),\n    Tags = tostring(Tags)\n",
                                "functionParameters": "TerminatedEmployeesWatchlistAlias:string='TerminatedEmployees'",
                                "version": 2,
                                "tags": [
                                    {
                                        "name": "description",
                                        "value": "MSBizAppsTerminatedEmployees"
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "apiVersion": "2022-01-01-preview",
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
                            "dependsOn": [
                                "[variables('parserObject5')._parserId5]"
                            ],
                            "properties": {
                                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'MSBizAppsTerminatedEmployees')]",
                                "contentId": "[variables('parserObject5').parserContentId5]",
                                "kind": "Parser",
                                "version": "[variables('parserObject5').parserVersion5]",
                                "source": {
                                    "name": "Power Platform",
                                    "kind": "Solution",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "tier": "Microsoft",
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "contentId": "[variables('parserObject5').parserContentId5]",
                "contentKind": "Parser",
                "displayName": "MSBizAppsTerminatedEmployees",
                "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '3.0.1')))]",
                "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject5').parserContentId5,'-', '3.0.1')))]",
                "version": "[variables('parserObject5').parserVersion5]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
            "apiVersion": "2022-10-01",
            "name": "[variables('parserObject5')._parserName5]",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "eTag": "*",
                "displayName": "MSBizAppsTerminatedEmployees",
                "category": "MSBizAppsFunctions",
                "functionAlias": "MSBizAppsTerminatedEmployees",
                "query": "let TerminatedEmployees_definition = datatable (\n    UserIdentifier: string,\n    UserAADObjectId: string,\n    UserOnPremSid: string,\n    UserPrincipalName: string,\n    UserState: string,\n    NotificationDate: datetime,\n    TerminationDate: datetime,\n    Tags: string\n) [\n    '_', '_', '_', '_', '_', datetime(null), datetime(null), '_'\n];\nlet TerminatedEmployees_data = (\n    _GetWatchlist(TerminatedEmployeesWatchlistAlias)\n    | project\n        UserIdentifier = column_ifexists('User Identifier', '_'),\n        UserAADObjectId = column_ifexists('User AAD Object Id', '_'),\n        UserOnPremSid = column_ifexists('User On-Prem Sid', '_'),\n        UserPrincipalName = column_ifexists('User Principal Name', '_'),\n        UserState = column_ifexists('UserState', '_'),\n        NotificationDate = todatetime(column_ifexists('Notification date', datetime(null))),\n        TerminationDate = todatetime(column_ifexists('Termination date', datetime(null))),\n        Tags = column_ifexists('Tags', '_')\n    );\nTerminatedEmployees_data\n| union isfuzzy = true (TerminatedEmployees_definition)\n| where UserPrincipalName != '_'\n| project\n    UserIdentifier = tostring(UserIdentifier),\n    UserAADObjectId = tostring(UserAADObjectId),\n    UserOnPremSid = tostring(UserOnPremSid),\n    UserPrincipalName = tostring(UserPrincipalName),\n    UserState = tostring(UserState),\n    NotificationDate = todatetime(NotificationDate),\n    TerminationDate = todatetime(TerminationDate),\n    Tags = tostring(Tags)\n",
                "functionParameters": "TerminatedEmployeesWatchlistAlias:string='TerminatedEmployees'",
                "version": 2,
                "tags": [
                    {
                        "name": "description",
                        "value": "MSBizAppsTerminatedEmployees"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "apiVersion": "2022-01-01-preview",
            "location": "[parameters('workspace-location')]",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject5')._parserId5,'/'))))]",
            "dependsOn": [
                "[variables('parserObject5')._parserId5]"
            ],
            "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'MSBizAppsTerminatedEmployees')]",
                "contentId": "[variables('parserObject5').parserContentId5]",
                "kind": "Parser",
                "version": "[variables('parserObject5').parserVersion5]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "tier": "Microsoft",
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "link": "https://support.microsoft.com"
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition10'), variables('dataConnectorVersion10'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentId10')]",
                "displayName": "Microsoft Power Automate",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion10')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId10'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId10')]",
                                    "title": "Microsoft Power Automate",
                                    "publisher": "Microsoft",
                                    "logo": "PowerAutomate.svg",
                                    "descriptionMarkdown": "Power Automate is a Microsoft service that helps users create automated workflows between apps and services to synchronize files, get notifications, collect data, and more. It simplifies task automation, increasing efficiency by reducing manual, repetitive tasks, and enhancing productivity. The Power Automate data connector provides the capability to ingest Power Automate activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Microsoft Power Automate",
                                            "baseQuery": "PowerAutomateActivity"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Microsoft Power Automate Logs",
                                            "query": "PowerAutomateActivity\n            | sort by TimeGenerated"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "PowerAutomateActivity",
                                            "lastDataReceivedQuery": "PowerAutomateActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": true
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            },
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                "providerDisplayName": "Keys",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "action": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Tenant Permissions",
                                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                                            },
                                            {
                                                "name": "Micorosft Purview Audit",
                                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "title": "Connect Microsoft Power Automate audit logs to Microsoft Sentinel",
                                            "description": "This connector uses the Office Management API to get your Power Automate audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerAutomateActivity** table.",
                                            "instructions": [
                                                {
                                                    "parameters": {
                                                        "label": "toggle",
                                                        "name": "toggle"
                                                    },
                                                    "type": "ConnectionToggleButton"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId10')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId10'))]",
                                "contentId": "[variables('_dataConnectorContentId10')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion10')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections10')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections10')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "apiVersion": "2021-09-01-preview",
                            "name": "[variables('_dataConnectorDataCollectionRulePrefix10')]",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('_workspaceResourceId')]",
                                            "name": "[variables('_destinationName')]"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Microsoft-PowerAutomateActivity"
                                        ],
                                        "destinations": [
                                            "[variables('_destinationName')]"
                                        ],
                                        "outputStream": "Microsoft-PowerAutomateActivity"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[variables('_dataConnectorcontentProductId10')]",
                "id": "[variables('_dataConnectorcontentProductId10')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId10'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_uiConfigId10')]",
                    "title": "Microsoft Power Automate",
                    "publisher": "Microsoft",
                    "logo": "PowerAutomate.svg",
                    "descriptionMarkdown": "Power Automate is a Microsoft service that helps users create automated workflows between apps and services to synchronize files, get notifications, collect data, and more. It simplifies task automation, increasing efficiency by reducing manual, repetitive tasks, and enhancing productivity. The Power Automate data connector provides the capability to ingest Power Automate activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Microsoft Power Automate",
                            "baseQuery": "PowerAutomateActivity"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Microsoft Power Automate Logs",
                            "query": "PowerAutomateActivity\n            | sort by TimeGenerated"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "PowerAutomateActivity",
                            "lastDataReceivedQuery": "PowerAutomateActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": true
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            },
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                "providerDisplayName": "Keys",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "action": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Tenant Permissions",
                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                            },
                            {
                                "name": "Micorosft Purview Audit",
                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Connect Microsoft Power Automate audit logs to Microsoft Sentinel",
                            "description": "This connector uses the Office Management API to get your Power Automate audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerAutomateActivity** table.",
                            "instructions": [
                                {
                                    "parameters": {
                                        "label": "toggle",
                                        "name": "toggle"
                                    },
                                    "type": "ConnectionToggleButton"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId10')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId10'))]",
                "contentId": "[variables('_dataConnectorContentId10')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion10')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Business Applications",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections10')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections10')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections10'), variables('dataConnectorVersionConnections10'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections10')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections10'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections10')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections10')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections10'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections10')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections10')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_uiConfigId10'))]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "PurviewAudit",
                            "properties": {
                                "TenantId": "[[subscription().tenantId]",
                                "SourceType": "MicrosoftFlow",
                                "ConnectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "DataTypes": {
                                    "Logs": {
                                        "state": "Enabled"
                                    }
                                },
                                "DcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "StreamName": "OFFICEPOWERAUTOMATE_RESTAPI"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections10'),'-', variables('dataConnectorVersionConnections10'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition11'), variables('dataConnectorVersion11'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentId11')]",
                "displayName": "Microsoft Power Apps",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion11')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId11'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId11')]",
                                    "title": "Microsoft Power Apps",
                                    "publisher": "Microsoft",
                                    "logo": "PowerApps.svg",
                                    "descriptionMarkdown": "Microsoft Power Apps is a suite that allows users to build custom business applications without extensive coding knowledge. It enables the rapid development of apps that can connect to a variety of data sources, helping to automate and transform business processes, thus improving efficiency and productivity. The Power Apps data connector provides the capability to ingest Power Apps activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Microsoft Power Apps",
                                            "baseQuery": "PowerAppsActivity"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Microsoft Power Apps Logs",
                                            "query": "PowerAppsActivity\n            | sort by TimeGenerated"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "PowerAppsActivity",
                                            "lastDataReceivedQuery": "PowerAppsActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": true
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            },
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                "providerDisplayName": "Keys",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "action": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Tenant Permissions",
                                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                                            },
                                            {
                                                "name": "Micorosft Purview Audit",
                                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "title": "Connect Microsoft Power Apps audit logs to Microsoft Sentinel",
                                            "description": "This connector uses the Office Management API to get your Power Apps audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerAppsActivity** table.",
                                            "instructions": [
                                                {
                                                    "parameters": {
                                                        "label": "toggle",
                                                        "name": "toggle"
                                                    },
                                                    "type": "ConnectionToggleButton"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId11')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId11'))]",
                                "contentId": "[variables('_dataConnectorContentId11')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion11')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections11')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections11')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "apiVersion": "2021-09-01-preview",
                            "name": "[variables('_dataConnectorDataCollectionRulePrefix11')]",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('_workspaceResourceId')]",
                                            "name": "[variables('_destinationName')]"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Microsoft-PowerAppsActivity"
                                        ],
                                        "destinations": [
                                            "[variables('_destinationName')]"
                                        ],
                                        "outputStream": "Microsoft-PowerAppsActivity"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[variables('_dataConnectorcontentProductId11')]",
                "id": "[variables('_dataConnectorcontentProductId11')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId11'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_uiConfigId11')]",
                    "title": "Microsoft Power Apps",
                    "publisher": "Microsoft",
                    "logo": "PowerApps.svg",
                    "descriptionMarkdown": "Microsoft Power Apps is a suite that allows users to build custom business applications without extensive coding knowledge. It enables the rapid development of apps that can connect to a variety of data sources, helping to automate and transform business processes, thus improving efficiency and productivity. The Power Apps data connector provides the capability to ingest Power Apps activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Microsoft Power Apps",
                            "baseQuery": "PowerAppsActivity"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Microsoft Power Apps Logs",
                            "query": "PowerAppsActivity\n            | sort by TimeGenerated"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "PowerAppsActivity",
                            "lastDataReceivedQuery": "PowerAppsActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": true
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            },
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                "providerDisplayName": "Keys",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "action": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Tenant Permissions",
                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                            },
                            {
                                "name": "Micorosft Purview Audit",
                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Connect Microsoft Power Apps audit logs to Microsoft Sentinel",
                            "description": "This connector uses the Office Management API to get your Power Apps audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerAppsActivity** table.",
                            "instructions": [
                                {
                                    "parameters": {
                                        "label": "toggle",
                                        "name": "toggle"
                                    },
                                    "type": "ConnectionToggleButton"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId11')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId11'))]",
                "contentId": "[variables('_dataConnectorContentId11')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion11')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Business Applications",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections11')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections11')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections11'), variables('dataConnectorVersionConnections11'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections11')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections11'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections11')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections11')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections11'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections11')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections11')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_uiConfigId11'))]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "PurviewAudit",
                            "properties": {
                                "TenantId": "[[subscription().tenantId]",
                                "SourceType": "PowerAppsApp",
                                "ConnectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "DataTypes": {
                                    "Logs": {
                                        "state": "Enabled"
                                    }
                                },
                                "DcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "StreamName": "OFFICEPOWERAPPS_RESTAPI"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections11'),'-', variables('dataConnectorVersionConnections11'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition12'), variables('dataConnectorVersion12'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentId12')]",
                "displayName": "Microsoft Power Platform DLP",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion12')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId12'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId12')]",
                                    "title": "Microsoft Power Platform DLP",
                                    "publisher": "Microsoft",
                                    "logo": "PowerPlatform.svg",
                                    "descriptionMarkdown": "Data Loss Prevention (DLP) in Microsoft Power Platform is a policy tool that ensures sensitive business data isn't unintentionally shared or leaked. DLP policies can control which connectors are available to users, and how they can be used together, providing a layer of security to protect business-critical information while enabling effective app and flow creation. The Power Platform DLP data connector provides the capability to ingest Power Platform DLP activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Microsoft Power Platform DLP",
                                            "baseQuery": "PowerPlatformDlpActivity"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Office Power Platform DLP Logs",
                                            "query": "PowerPlatformDlpActivity\n            | sort by TimeGenerated"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "PowerPlatformDlpActivity",
                                            "lastDataReceivedQuery": "PowerPlatformDlpActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": true
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            },
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                "providerDisplayName": "Keys",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "action": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Tenant Permissions",
                                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                                            },
                                            {
                                                "name": "Micorosft Purview Audit",
                                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "title": "Connect Microsoft Power Platform DLP audit logs to Microsoft Sentinel",
                                            "description": "This connector uses the Office Management API to get your Power Platform DLP audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerPlatformDlpActivity** table.",
                                            "instructions": [
                                                {
                                                    "parameters": {
                                                        "label": "toggle",
                                                        "name": "toggle"
                                                    },
                                                    "type": "ConnectionToggleButton"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId12')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId12'))]",
                                "contentId": "[variables('_dataConnectorContentId12')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion12')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections12')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections12')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "apiVersion": "2021-09-01-preview",
                            "name": "[variables('_dataConnectorDataCollectionRulePrefix12')]",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('_workspaceResourceId')]",
                                            "name": "[variables('_destinationName')]"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Microsoft-PowerPlatformDlpActivity"
                                        ],
                                        "destinations": [
                                            "[variables('_destinationName')]"
                                        ],
                                        "outputStream": "Microsoft-PowerPlatformDlpActivity"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[variables('_dataConnectorcontentProductId12')]",
                "id": "[variables('_dataConnectorcontentProductId12')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId12'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_uiConfigId12')]",
                    "title": "Microsoft Power Platform DLP",
                    "publisher": "Microsoft",
                    "logo": "PowerPlatform.svg",
                    "descriptionMarkdown": "Data Loss Prevention (DLP) in Microsoft Power Platform is a policy tool that ensures sensitive business data isn't unintentionally shared or leaked. DLP policies can control which connectors are available to users, and how they can be used together, providing a layer of security to protect business-critical information while enabling effective app and flow creation. The Power Platform DLP data connector provides the capability to ingest Power Platform DLP activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Microsoft Power Platform DLP",
                            "baseQuery": "PowerPlatformDlpActivity"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Office Power Platform DLP Logs",
                            "query": "PowerPlatformDlpActivity\n            | sort by TimeGenerated"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "PowerPlatformDlpActivity",
                            "lastDataReceivedQuery": "PowerPlatformDlpActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": true
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            },
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                "providerDisplayName": "Keys",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "action": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Tenant Permissions",
                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                            },
                            {
                                "name": "Micorosft Purview Audit",
                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Connect Microsoft Power Platform DLP audit logs to Microsoft Sentinel",
                            "description": "This connector uses the Office Management API to get your Power Platform DLP audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerPlatformDlpActivity** table.",
                            "instructions": [
                                {
                                    "parameters": {
                                        "label": "toggle",
                                        "name": "toggle"
                                    },
                                    "type": "ConnectionToggleButton"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId12')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId12'))]",
                "contentId": "[variables('_dataConnectorContentId12')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion12')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Business Applications",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections12')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections12')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections12'), variables('dataConnectorVersionConnections12'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections12')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections12'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections12')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections12')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections12'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections12')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections12')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_uiConfigId12'))]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "PurviewAudit",
                            "properties": {
                                "TenantId": "[[subscription().tenantId]",
                                "SourceType": "PowerPlatformAdminDlp",
                                "ConnectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "DataTypes": {
                                    "Logs": {
                                        "state": "Enabled"
                                    }
                                },
                                "DcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "StreamName": "OFFICEPOWERPLATFORMADMINDLP_RESTAPI"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections12'),'-', variables('dataConnectorVersionConnections12'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition13'), variables('dataConnectorVersion13'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentId13')]",
                "displayName": "Microsoft Power Platform Connectors",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion13')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId13'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId13')]",
                                    "title": "Microsoft Power Platform Connectors",
                                    "publisher": "Microsoft",
                                    "logo": "PowerPlatform.svg",
                                    "descriptionMarkdown": "Power Platform connectors are APIs within Microsoft's Power Platform (Power Apps, Power Automate, Power BI) that enable data exchange between different systems. They enable seamless integration with Microsoft and third-party services, allowing data reading and writing, workflow triggering, and other interactions without requiring knowledge of the services' underlying code. The Power Platform Connectors data connector provides the capability to ingest Power Platform Connector activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Microsoft Power Apps",
                                            "baseQuery": "PowerPlatformConnectorActivity"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Microsoft Power Platform Connector Logs",
                                            "query": "PowerPlatformConnectorActivity\n            | sort by TimeGenerated"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "PowerPlatformConnectorActivity",
                                            "lastDataReceivedQuery": "PowerPlatformConnectorActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": true
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            },
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                "providerDisplayName": "Keys",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "action": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Tenant Permissions",
                                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                                            },
                                            {
                                                "name": "Micorosft Purview Audit",
                                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "title": "Connect Microsoft Power Platform Connector audit logs to Microsoft Sentinel",
                                            "description": "This connector uses the Office Management API to get your Power Platform Connector audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerPlatformConnectorActivity** table.",
                                            "instructions": [
                                                {
                                                    "parameters": {
                                                        "label": "toggle",
                                                        "name": "toggle"
                                                    },
                                                    "type": "ConnectionToggleButton"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId13')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId13'))]",
                                "contentId": "[variables('_dataConnectorContentId13')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion13')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections13')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections13')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "apiVersion": "2021-09-01-preview",
                            "name": "[variables('_dataConnectorDataCollectionRulePrefix13')]",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('_workspaceResourceId')]",
                                            "name": "[variables('_destinationName')]"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Microsoft-PowerPlatformConnectorActivity"
                                        ],
                                        "destinations": [
                                            "[variables('_destinationName')]"
                                        ],
                                        "outputStream": "Microsoft-PowerPlatformConnectorActivity"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[variables('_dataConnectorcontentProductId13')]",
                "id": "[variables('_dataConnectorcontentProductId13')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId13'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_uiConfigId13')]",
                    "title": "Microsoft Power Platform Connectors",
                    "publisher": "Microsoft",
                    "logo": "PowerPlatform.svg",
                    "descriptionMarkdown": "Power Platform connectors are APIs within Microsoft's Power Platform (Power Apps, Power Automate, Power BI) that enable data exchange between different systems. They enable seamless integration with Microsoft and third-party services, allowing data reading and writing, workflow triggering, and other interactions without requiring knowledge of the services' underlying code. The Power Platform Connectors data connector provides the capability to ingest Power Platform Connector activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Microsoft Power Apps",
                            "baseQuery": "PowerPlatformConnectorActivity"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Microsoft Power Platform Connector Logs",
                            "query": "PowerPlatformConnectorActivity\n            | sort by TimeGenerated"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "PowerPlatformConnectorActivity",
                            "lastDataReceivedQuery": "PowerPlatformConnectorActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": true
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            },
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                "providerDisplayName": "Keys",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "action": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Tenant Permissions",
                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                            },
                            {
                                "name": "Micorosft Purview Audit",
                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Connect Microsoft Power Platform Connector audit logs to Microsoft Sentinel",
                            "description": "This connector uses the Office Management API to get your Power Platform Connector audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerPlatformConnectorActivity** table.",
                            "instructions": [
                                {
                                    "parameters": {
                                        "label": "toggle",
                                        "name": "toggle"
                                    },
                                    "type": "ConnectionToggleButton"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId13')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId13'))]",
                "contentId": "[variables('_dataConnectorContentId13')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion13')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Business Applications",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections13')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections13')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections13'), variables('dataConnectorVersionConnections13'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections13')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections13'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections13')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections13')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections13'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections13')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections13')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_uiConfigId13'))]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "PurviewAudit",
                            "properties": {
                                "TenantId": "[[subscription().tenantId]",
                                "SourceType": "PowerAppsResource",
                                "ConnectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "DataTypes": {
                                    "Logs": {
                                        "state": "Enabled"
                                    }
                                },
                                "DcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "StreamName": "OFFICEPOWERAPPSRESOURCE_RESTAPI"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections13'),'-', variables('dataConnectorVersionConnections13'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition14'), variables('dataConnectorVersion14'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentId14')]",
                "displayName": "Microsoft Dataverse",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion14')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId14'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId14')]",
                                    "title": "Microsoft Dataverse",
                                    "publisher": "Microsoft",
                                    "logo": "Dataverse.svg",
                                    "descriptionMarkdown": "Microsoft Dataverse is a scalable and secure data platform that enables organizations to store and manage data used by business applications. The Microsoft Dataverse data connector provides the capability to ingest Dataverse and Dynamics 365 CRM activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Microsoft Dataverse",
                                            "baseQuery": "DataverseActivity"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Microsoft Dataverse Logs",
                                            "query": "DataverseActivity\n            | sort by TimeGenerated"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "DataverseActivity",
                                            "lastDataReceivedQuery": "DataverseActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": true
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            },
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                "providerDisplayName": "Keys",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "action": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Tenant Permissions",
                                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                                            },
                                            {
                                                "name": "Micorosft Purview Audit",
                                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                                            },
                                            {
                                                "name": "Production Dataverse",
                                                "description": "Activity logging is available only for Production environments. Other types, such as sandbox, do not support activity logging."
                                            },
                                            {
                                                "name": "Dataverse Audit Settings",
                                                "description": "Audit settings must be configured both globally and at the entity/table level. [See the documentation to learn more about Dataverse audit settings](https://learn.microsoft.com/azure/sentinel/business-applications/deploy-power-platform-solution)."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "title": "Connect Microsoft Dataverse audit logs to Microsoft Sentinel",
                                            "description": "This connector uses the Office Management API to get your Dataverse audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **DataverseActivity** table.",
                                            "instructions": [
                                                {
                                                    "parameters": {
                                                        "label": "toggle",
                                                        "name": "toggle"
                                                    },
                                                    "type": "ConnectionToggleButton"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId14')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId14'))]",
                                "contentId": "[variables('_dataConnectorContentId14')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion14')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections14')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections14')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "apiVersion": "2021-09-01-preview",
                            "name": "[variables('_dataConnectorDataCollectionRulePrefix14')]",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('_workspaceResourceId')]",
                                            "name": "[variables('_destinationName')]"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Microsoft-DataverseActivity"
                                        ],
                                        "destinations": [
                                            "[variables('_destinationName')]"
                                        ],
                                        "outputStream": "Microsoft-DataverseActivity"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[variables('_dataConnectorcontentProductId14')]",
                "id": "[variables('_dataConnectorcontentProductId14')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId14'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_uiConfigId14')]",
                    "title": "Microsoft Dataverse",
                    "publisher": "Microsoft",
                    "logo": "Dataverse.svg",
                    "descriptionMarkdown": "Microsoft Dataverse is a scalable and secure data platform that enables organizations to store and manage data used by business applications. The Microsoft Dataverse data connector provides the capability to ingest Dataverse and Dynamics 365 CRM activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Microsoft Dataverse",
                            "baseQuery": "DataverseActivity"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Microsoft Dataverse Logs",
                            "query": "DataverseActivity\n            | sort by TimeGenerated"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "DataverseActivity",
                            "lastDataReceivedQuery": "DataverseActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": true
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            },
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                "providerDisplayName": "Keys",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "action": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Tenant Permissions",
                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                            },
                            {
                                "name": "Micorosft Purview Audit",
                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                            },
                            {
                                "name": "Production Dataverse",
                                "description": "Activity logging is available only for Production environments. Other types, such as sandbox, do not support activity logging."
                            },
                            {
                                "name": "Dataverse Audit Settings",
                                "description": "Audit settings must be configured both globally and at the entity/table level. [See the documentation to learn more about Dataverse audit settings](https://learn.microsoft.com/azure/sentinel/business-applications/deploy-power-platform-solution)."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Connect Microsoft Dataverse audit logs to Microsoft Sentinel",
                            "description": "This connector uses the Office Management API to get your Dataverse audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **DataverseActivity** table.",
                            "instructions": [
                                {
                                    "parameters": {
                                        "label": "toggle",
                                        "name": "toggle"
                                    },
                                    "type": "ConnectionToggleButton"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId14')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId14'))]",
                "contentId": "[variables('_dataConnectorContentId14')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion14')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Business Applications",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections14')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections14')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections14'), variables('dataConnectorVersionConnections14'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections14')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections14'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections14')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections14')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections14'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections14')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections14')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_uiConfigId14'))]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "PurviewAudit",
                            "properties": {
                                "TenantId": "[[subscription().tenantId]",
                                "SourceType": "CRM",
                                "ConnectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "DataTypes": {
                                    "Logs": {
                                        "state": "Enabled"
                                    }
                                },
                                "DcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "StreamName": "OFFICEDATAVERSE_RESTAPI"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections14'),'-', variables('dataConnectorVersionConnections14'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('dataConnectorVersionConnections14')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition15'), variables('dataConnectorVersion15'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentId15')]",
                "displayName": "Microsoft Power Platform Admin Activity",
                "contentKind": "DataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersion15')]",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId15'))]",
                            "apiVersion": "2022-09-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
                            "location": "[parameters('workspace-location')]",
                            "kind": "Customizable",
                            "properties": {
                                "connectorUiConfig": {
                                    "id": "[variables('_uiConfigId15')]",
                                    "title": "Microsoft Power Platform Admin Activity",
                                    "publisher": "Microsoft",
                                    "logo": "PowerPlatform.svg",
                                    "descriptionMarkdown": "Microsoft Power Platform is a low-code/no-code suite empowering both citizen and pro developers to streamline business processes by enabling the creation of custom apps, automation of workflows, and data analysis with minimal coding. The Power Platform Admin data connector provides the capability to ingest Power Platform administrator activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                                    "graphQueries": [
                                        {
                                            "metricName": "Total data received",
                                            "legend": "Microsoft Power Platform Admin Activity",
                                            "baseQuery": "PowerPlatformAdminActivity"
                                        }
                                    ],
                                    "sampleQueries": [
                                        {
                                            "description": "Microsoft Power Platform Admin Activity Logs",
                                            "query": "PowerPlatformAdminActivity\n            | sort by TimeGenerated"
                                        }
                                    ],
                                    "dataTypes": [
                                        {
                                            "name": "PowerPlatformAdminActivity",
                                            "lastDataReceivedQuery": "PowerPlatformAdminActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                                        }
                                    ],
                                    "connectivityCriteria": [
                                        {
                                            "type": "HasDataConnectors"
                                        }
                                    ],
                                    "availability": {
                                        "status": 2,
                                        "isPreview": true
                                    },
                                    "permissions": {
                                        "resourceProvider": [
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces",
                                                "permissionsDisplayText": "Read and Write permissions are required.",
                                                "providerDisplayName": "Workspace",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "write": true,
                                                    "read": true,
                                                    "delete": true
                                                }
                                            },
                                            {
                                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                                "providerDisplayName": "Keys",
                                                "scope": "Workspace",
                                                "requiredPermissions": {
                                                    "action": true
                                                }
                                            }
                                        ],
                                        "customs": [
                                            {
                                                "name": "Tenant Permissions",
                                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                                            },
                                            {
                                                "name": "Micorosft Purview Audit",
                                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                                            }
                                        ]
                                    },
                                    "instructionSteps": [
                                        {
                                            "title": "Connect Microsoft Power Platform Admin Activity audit logs to Microsoft Sentinel",
                                            "description": "This connector uses the Office Management API to get your Power Platform administrator audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerPlatformAdminActivity** table.",
                                            "instructions": [
                                                {
                                                    "parameters": {
                                                        "label": "toggle",
                                                        "name": "toggle"
                                                    },
                                                    "type": "ConnectionToggleButton"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId15')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId15'))]",
                                "contentId": "[variables('_dataConnectorContentId15')]",
                                "kind": "DataConnector",
                                "version": "[variables('dataConnectorVersion15')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                },
                                "dependencies": {
                                    "criteria": [
                                        {
                                            "version": "[variables('dataConnectorVersionConnections15')]",
                                            "contentId": "[variables('_dataConnectorContentIdConnections15')]",
                                            "kind": "ResourcesDataConnector"
                                        }
                                    ]
                                }
                            }
                        },
                        {
                            "type": "Microsoft.Insights/dataCollectionRules",
                            "apiVersion": "2021-09-01-preview",
                            "name": "[variables('_dataConnectorDataCollectionRulePrefix15')]",
                            "location": "[parameters('workspace-location')]",
                            "properties": {
                                "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
                                "destinations": {
                                    "logAnalytics": [
                                        {
                                            "workspaceResourceId": "[variables('_workspaceResourceId')]",
                                            "name": "[variables('_destinationName')]"
                                        }
                                    ]
                                },
                                "dataFlows": [
                                    {
                                        "streams": [
                                            "Microsoft-PowerPlatformAdminActivity"
                                        ],
                                        "destinations": [
                                            "[variables('_destinationName')]"
                                        ],
                                        "outputStream": "Microsoft-PowerPlatformAdminActivity"
                                    }
                                ]
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[variables('_dataConnectorcontentProductId15')]",
                "id": "[variables('_dataConnectorcontentProductId15')]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId15'))]",
            "apiVersion": "2022-09-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
            "location": "[parameters('workspace-location')]",
            "kind": "Customizable",
            "properties": {
                "connectorUiConfig": {
                    "id": "[variables('_uiConfigId15')]",
                    "title": "Microsoft Power Platform Admin Activity",
                    "publisher": "Microsoft",
                    "logo": "PowerPlatform.svg",
                    "descriptionMarkdown": "Microsoft Power Platform is a low-code/no-code suite empowering both citizen and pro developers to streamline business processes by enabling the creation of custom apps, automation of workflows, and data analysis with minimal coding. The Power Platform Admin data connector provides the capability to ingest Power Platform administrator activity logs from the Microsoft Purview Audit log into Microsoft Sentinel.",
                    "graphQueries": [
                        {
                            "metricName": "Total data received",
                            "legend": "Microsoft Power Platform Admin Activity",
                            "baseQuery": "PowerPlatformAdminActivity"
                        }
                    ],
                    "sampleQueries": [
                        {
                            "description": "Microsoft Power Platform Admin Activity Logs",
                            "query": "PowerPlatformAdminActivity\n            | sort by TimeGenerated"
                        }
                    ],
                    "dataTypes": [
                        {
                            "name": "PowerPlatformAdminActivity",
                            "lastDataReceivedQuery": "PowerPlatformAdminActivity\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                        }
                    ],
                    "connectivityCriteria": [
                        {
                            "type": "HasDataConnectors"
                        }
                    ],
                    "availability": {
                        "status": 2,
                        "isPreview": true
                    },
                    "permissions": {
                        "resourceProvider": [
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces",
                                "permissionsDisplayText": "Read and Write permissions are required.",
                                "providerDisplayName": "Workspace",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "write": true,
                                    "read": true,
                                    "delete": true
                                }
                            },
                            {
                                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                                "permissionsDisplayText": "Read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key)",
                                "providerDisplayName": "Keys",
                                "scope": "Workspace",
                                "requiredPermissions": {
                                    "action": true
                                }
                            }
                        ],
                        "customs": [
                            {
                                "name": "Tenant Permissions",
                                "description": "'Security Administrator' or 'Global Administrator' on the workspace's tenant."
                            },
                            {
                                "name": "Micorosft Purview Audit",
                                "description": "Microsoft Purview Audit (Standard or Premium) must be activated."
                            }
                        ]
                    },
                    "instructionSteps": [
                        {
                            "title": "Connect Microsoft Power Platform Admin Activity audit logs to Microsoft Sentinel",
                            "description": "This connector uses the Office Management API to get your Power Platform administrator audit logs. The logs will be stored and processed in your existing Microsoft Sentinel workspace. You can find the data in the **PowerPlatformAdminActivity** table.",
                            "instructions": [
                                {
                                    "parameters": {
                                        "label": "toggle",
                                        "name": "toggle"
                                    },
                                    "type": "ConnectionToggleButton"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentId15')))]",
            "apiVersion": "2022-01-01-preview",
            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
            "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentId15'))]",
                "contentId": "[variables('_dataConnectorContentId15')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion15')]",
                "source": {
                    "kind": "Solution",
                    "name": "Microsoft Business Applications",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "criteria": [
                        {
                            "version": "[variables('dataConnectorVersionConnections15')]",
                            "contentId": "[variables('_dataConnectorContentIdConnections15')]",
                            "kind": "ResourcesDataConnector"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
            "apiVersion": "2023-04-01-preview",
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections15'), variables('dataConnectorVersionConnections15'))]",
            "location": "[parameters('workspace-location')]",
            "dependsOn": [
                "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
            ],
            "properties": {
                "contentId": "[variables('_dataConnectorContentIdConnections15')]",
                "displayName": "[concat(variables('_solutionName'), variables('dataConnectorTemplateNameConnections15'))]",
                "contentKind": "ResourcesDataConnector",
                "mainTemplate": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "[variables('dataConnectorVersionConnections15')]",
                    "parameters": {
                        "connectorDefinitionName": {
                            "defaultValue": "connectorDefinitionName",
                            "type": "string",
                            "minLength": 1
                        },
                        "workspace": {
                            "defaultValue": "[parameters('workspace')]",
                            "type": "string"
                        },
                        "dcrConfig": {
                            "defaultValue": {
                                "dataCollectionEndpoint": "data collection Endpoint",
                                "dataCollectionRuleImmutableId": "data collection rule immutableId"
                            },
                            "type": "object"
                        }
                    },
                    "resources": [
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections15')))]",
                            "apiVersion": "2022-01-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
                            "properties": {
                                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections15'))]",
                                "contentId": "[variables('_dataConnectorContentIdConnections15')]",
                                "kind": "ResourcesDataConnector",
                                "version": "[variables('dataConnectorVersionConnections15')]",
                                "source": {
                                    "kind": "Solution",
                                    "name": "Microsoft Business Applications",
                                    "sourceId": "[variables('_solutionId')]"
                                },
                                "author": {
                                    "name": "Microsoft"
                                },
                                "support": {
                                    "name": "Microsoft Corporation",
                                    "email": "support@microsoft.com",
                                    "tier": "Microsoft",
                                    "link": "https://support.microsoft.com"
                                }
                            }
                        },
                        {
                            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_uiConfigId15'))]",
                            "apiVersion": "2022-12-01-preview",
                            "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
                            "location": "[parameters('workspace-location')]",
                            "kind": "PurviewAudit",
                            "properties": {
                                "TenantId": "[[subscription().tenantId]",
                                "SourceType": "PowerPlatformAdministratorActivity",
                                "ConnectorDefinitionName": "[[parameters('connectorDefinitionName')]",
                                "DataTypes": {
                                    "Logs": {
                                        "state": "Enabled"
                                    }
                                },
                                "DcrConfig": {
                                    "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                                    "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]",
                                    "StreamName": "OFFICEPOWERPLATFORMADMIN_RESTAPI"
                                }
                            }
                        }
                    ]
                },
                "packageKind": "Solution",
                "packageVersion": "[variables('_solutionVersion')]",
                "packageName": "[variables('_solutionName')]",
                "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections15'),'-', variables('dataConnectorVersionConnections15'))))]",
                "packageId": "[variables('_solutionId')]",
                "contentSchemaVersion": "3.0.0",
                "version": "[variables('_solutionVersion')]"
            }
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
            "apiVersion": "2023-04-01-preview",
            "location": "[parameters('workspace-location')]",
            "properties": {
                "version": "3.1.1",
                "kind": "Solution",
                "contentSchemaVersion": "3.0.0",
                "displayName": "Power Platform",
                "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
                "descriptionHtml": "<p><strong>Note:</strong> <em>There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</em></p>\n<p>Microsoft Power Platform provides a wide range of tools for citizen developers to build, run and manage low-code and no-code applications quickly, simply and at scale. With that, it also introduces a concern around the risk of security vulnerabilities introduced by citizen developers, some of whom may lack the security awareness of traditional pro-dev community. To counter this, early threat detection is crucial and can complement preventative guardrails to enable frictionless productivity while minimizing cyber risk.</p>\n<p>The Microsoft Sentinel solution for Microsoft Power Platform allows customers to monitor and detect various suspicious or malicious activities in their Power Platform environments.</p>\n<p>It collects activity logs from the different Power Platform components (Power Apps, Power Automate, Power Platform Connectors, Power Platform DLP, Dataverse) as well as the Power Platform inventory data and analyzes those activity logs to detect threats and suspicious activities such as: Power Apps execution from unauthorized geographies, suspicious data destruction by Power Apps, mass deletion of Power Apps, phishing attacks made possible through Power Apps, Power Automate flows activity by departing employees, Microsoft Power Platform connectors added to the an environment, and the update or removal of Microsoft Power Platform data loss prevention policies.</p>\n<p>Due to the integration of the Power Platform inventory data, in addition to the activity logs, the solution also allows customers to investigate the detected threats in a full human readable context and understand for example what the name of the suspicious app is, the name of Power Platform environment it belongs to, the details of the user who created or modified the suspicious app, the details of the users using the app, and more.</p>\n<p><strong>Important</strong></p>\n<ul>\n<li><p>The Microsoft Sentinel Solution for Power Platform is currently in PREVIEW. The <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms\">Azure Preview Supplemental Terms</a> include additional legal terms that apply to Azure features that are in beta, preview, or otherwise not yet released into general availability.</p>\n</li>\n<li><p>This solution is a premium offering. Pricing information will be available before the solution becomes generally available.</p>\n</li>\n</ul>\n<p>Please review the solution <a href=\"https://learn.microsoft.com/azure/sentinel/business-applications/power-platform-solution-overview\">documentation</a> to learn more about deploying, configuring and using this solution.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 5, <strong>Analytic Rules:</strong> 13, <strong>Hunting Queries:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
                "contentKind": "Solution",
                "contentProductId": "[variables('_solutioncontentProductId')]",
                "id": "[variables('_solutioncontentProductId')]",
                "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/PowerPlatform.svg\" width=\"75px\" height=\"75px\">",
                "contentId": "[variables('_solutionId')]",
                "parentId": "[variables('_solutionId')]",
                "source": {
                    "kind": "Solution",
                    "name": "Power Platform",
                    "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                    "name": "Microsoft"
                },
                "support": {
                    "name": "Microsoft Corporation",
                    "email": "support@microsoft.com",
                    "tier": "Microsoft",
                    "link": "https://support.microsoft.com"
                },
                "dependencies": {
                    "operator": "AND",
                    "criteria": [
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentId1')]",
                            "version": "[variables('dataConnectorVersion1')]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                            "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                            "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                            "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                            "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                            "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                            "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                            "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                            "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                            "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                            "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                            "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                            "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
                        },
                        {
                            "kind": "AnalyticsRule",
                            "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                            "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
                        },
                        {
                            "kind": "HuntingQuery",
                            "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                            "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('parserObject1').parserContentId1]",
                            "version": "[variables('parserObject1').parserVersion1]"
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('parserObject2').parserContentId2]",
                            "version": "[variables('parserObject2').parserVersion2]"
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('parserObject3').parserContentId3]",
                            "version": "[variables('parserObject3').parserVersion3]"
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('parserObject4').parserContentId4]",
                            "version": "[variables('parserObject4').parserVersion4]"
                        },
                        {
                            "kind": "Parser",
                            "contentId": "[variables('parserObject5').parserContentId5]",
                            "version": "[variables('parserObject5').parserVersion5]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentIdConnections10')]",
                            "version": "[variables('dataConnectorVersionConnections10')]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentIdConnections11')]",
                            "version": "[variables('dataConnectorVersionConnections11')]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentIdConnections12')]",
                            "version": "[variables('dataConnectorVersionConnections12')]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentIdConnections13')]",
                            "version": "[variables('dataConnectorVersionConnections13')]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentIdConnections14')]",
                            "version": "[variables('dataConnectorVersionConnections14')]"
                        },
                        {
                            "kind": "DataConnector",
                            "contentId": "[variables('_dataConnectorContentIdConnections15')]",
                            "version": "[variables('dataConnectorVersionConnections15')]"
                        }
                    ]
                },
                "firstPublishDate": "2023-04-19",
                "providers": [
                    "Microsoft"
                ],
                "categories": {
                    "domains": [
                        "Application",
                        "Cloud Provider"
                    ]
                }
            },
            "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
        }
    ],
    "outputs": {}
}
